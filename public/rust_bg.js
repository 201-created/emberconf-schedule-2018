function asmFunc(global, env, buffer) {
 "almost asm";
 var HEAP8 = new global.Int8Array(buffer);
 var HEAP16 = new global.Int16Array(buffer);
 var HEAP32 = new global.Int32Array(buffer);
 var HEAPU8 = new global.Uint8Array(buffer);
 var HEAPU16 = new global.Uint16Array(buffer);
 var HEAPU32 = new global.Uint32Array(buffer);
 var HEAPF32 = new global.Float32Array(buffer);
 var HEAPF64 = new global.Float64Array(buffer);
 var Math_imul = global.Math.imul;
 var Math_fround = global.Math.fround;
 var Math_abs = global.Math.abs;
 var Math_clz32 = global.Math.clz32;
 var $_rust___wbg_f_low_level_vm_load_component = env.__wbg_f_low_level_vm_load_component;
 var $_rust___wbindgen_object_drop_ref = env.__wbindgen_object_drop_ref;
 var $_rust___wbg_f_low_level_vm_debug_before = env.__wbg_f_low_level_vm_debug_before;
 var $_rust___wbg_f_low_level_vm_evaluate_syscall = env.__wbg_f_low_level_vm_evaluate_syscall;
 var $_rust___wbg_f_low_level_vm_debug_after = env.__wbg_f_low_level_vm_debug_after;
 var $_rust___wbindgen_object_clone_ref = env.__wbindgen_object_clone_ref;
 var $_rust___wbindgen_throw = env.__wbindgen_throw;
 var global$0 = 94800;
 function f7(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
  var$1 = HEAPU32[var$0 >> 2] | 0;
  if (var$1) block : {
   f7(var$1 + 3584 | 0 | 0);
   f8(HEAPU32[var$0 >> 2] | 0 | 0);
  };
 }
 
 function f8(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   var$1 = var$0 + 4294967288 | 0;
   var$3 = HEAPU32[(var$0 + 4294967292 | 0) >> 2] | 0;
   var$0 = var$3 & 4294967288 | 0;
   var$2 = var$1 + var$0 | 0;
   label$2 : {
    label$3 : {
     if (var$3 & 1 | 0) break label$3;
     if ((var$3 & 3 | 0 | 0) == (0 | 0)) break label$2;
     var$3 = HEAPU32[var$1 >> 2] | 0;
     var$0 = var$3 + var$0 | 0;
     label$4 : {
      label$5 : {
       var$1 = var$1 - var$3 | 0;
       if ((HEAPU32[29204 >> 2] | 0 | 0) != (var$1 | 0)) block : {
        if (var$3 >>> 0 > 255 >>> 0) break label$5;
        var$4 = HEAPU32[(var$1 + 12 | 0) >> 2] | 0;
        var$5 = HEAPU32[(var$1 + 8 | 0) >> 2] | 0;
        if ((var$4 | 0) == (var$5 | 0)) break label$4;
        HEAP32[(var$5 + 12 | 0) >> 2] = var$4;
        HEAP32[(var$4 + 8 | 0) >> 2] = var$5;
        break label$3;
       };
       var$3 = HEAPU32[(var$2 + 4 | 0) >> 2] | 0;
       if ((var$3 & 3 | 0 | 0) != (3 | 0)) break label$3;
       HEAP32[29196 >> 2] = var$0;
       HEAP32[(var$2 + 4 | 0) >> 2] = var$3 & 4294967294 | 0;
       break label$1;
      };
      f61(var$1 | 0);
      break label$3;
     };
     HEAP32[28796 >> 2] = (HEAPU32[28796 >> 2] | 0) & (__wasm_rotl_i32(4294967294, var$3 >>> 3 | 0) | 0) | 0;
    };
    label$7 : {
     label$8 : {
      label$9 : {
       label$10 : {
        label$11 : {
         label$12 : {
          label$13 : {
           label$14 : {
            var$3 = HEAPU32[(var$2 + 4 | 0) >> 2] | 0;
            if ((var$3 & 2 | 0 | 0) == (0 | 0)) block1 : {
             if ((HEAPU32[29208 >> 2] | 0 | 0) == (var$2 | 0)) break label$14;
             if ((HEAPU32[29204 >> 2] | 0 | 0) == (var$2 | 0)) break label$13;
             var$4 = var$3 & 4294967288 | 0;
             var$0 = var$4 + var$0 | 0;
             if (var$4 >>> 0 > 255 >>> 0) break label$12;
             var$4 = HEAPU32[(var$2 + 12 | 0) >> 2] | 0;
             var$2 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
             if ((var$4 | 0) == (var$2 | 0)) break label$11;
             HEAP32[(var$2 + 12 | 0) >> 2] = var$4;
             HEAP32[(var$4 + 8 | 0) >> 2] = var$2;
             break label$10;
            };
            HEAP32[(var$2 + 4 | 0) >> 2] = var$3 & 4294967294 | 0;
            HEAP32[(var$1 + 4 | 0) >> 2] = var$0 | 1 | 0;
            HEAP32[(var$1 + var$0 | 0) >> 2] = var$0;
            break label$7;
           };
           HEAP32[29208 >> 2] = var$1;
           var$0 = (HEAPU32[29200 >> 2] | 0) + var$0 | 0;
           HEAP32[29200 >> 2] = var$0;
           HEAP32[(var$1 + 4 | 0) >> 2] = var$0 | 1 | 0;
           if ((var$1 | 0) == (HEAPU32[29204 >> 2] | 0 | 0)) block3 : {
            HEAP32[29196 >> 2] = 0;
            HEAP32[29204 >> 2] = 0;
           };
           if ((HEAPU32[29236 >> 2] | 0) >>> 0 >= var$0 >>> 0) break label$2;
           label$17 : {
            if (var$0 >>> 0 < 41 >>> 0) break label$17;
            var$0 = 29220;
            label$18 : do {
             var$2 = HEAPU32[var$0 >> 2] | 0;
             if (var$2 >>> 0 <= var$1 >>> 0) if ((var$2 + (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) | 0) >>> 0 > var$1 >>> 0) break label$17;;
             var$0 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
             if (var$0) continue label$18;
             break label$18;
            } while (1);
           };
           var$1 = 0;
           var$0 = HEAPU32[29228 >> 2] | 0;
           if ((var$0 | 0) == (0 | 0)) break label$9;
           label$20 : do {
            var$1 = var$1 + 1 | 0;
            var$0 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
            if (var$0) continue label$20;
            break label$20;
           } while (1);
           $143 = (wasm2asm_i32$2 = var$1 >>> 0 > 4095 >>> 0, wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = 4095, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
           break label$8;
          };
          HEAP32[29204 >> 2] = var$1;
          var$0 = (HEAPU32[29196 >> 2] | 0) + var$0 | 0;
          HEAP32[29196 >> 2] = var$0;
          break label$1;
         };
         f61(var$2 | 0);
         break label$10;
        };
        HEAP32[28796 >> 2] = (HEAPU32[28796 >> 2] | 0) & (__wasm_rotl_i32(4294967294, var$3 >>> 3 | 0) | 0) | 0;
       };
       HEAP32[(var$1 + 4 | 0) >> 2] = var$0 | 1 | 0;
       HEAP32[(var$1 + var$0 | 0) >> 2] = var$0;
       if ((var$1 | 0) != (HEAPU32[29204 >> 2] | 0 | 0)) break label$7;
       HEAP32[29196 >> 2] = var$0;
       return;
      };
      $143 = 4095;
     };
     var$1 = $143;
     HEAP32[29236 >> 2] = 4294967295;
     HEAP32[29244 >> 2] = var$1;
     return;
    };
    label$21 : {
     label$22 : {
      label$23 : {
       label$24 : {
        if (var$0 >>> 0 <= 255 >>> 0) block6 : {
         var$2 = var$0 >>> 3 | 0;
         var$0 = (var$2 << 3 | 0) + 28804 | 0;
         var$3 = HEAPU32[28796 >> 2] | 0;
         var$2 = 1 << (var$2 & 31 | 0) | 0;
         if ((var$3 & var$2 | 0 | 0) == (0 | 0)) break label$24;
         var$3 = var$0 + 8 | 0;
         $187 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
         break label$23;
        };
        f62(var$1 | 0, var$0 | 0);
        var$1 = (HEAPU32[29244 >> 2] | 0) + 4294967295 | 0;
        HEAP32[29244 >> 2] = var$1;
        if (var$1) break label$2;
        var$0 = HEAPU32[29228 >> 2] | 0;
        if ((var$0 | 0) == (0 | 0)) break label$22;
        var$1 = 0;
        label$26 : do {
         var$1 = var$1 + 1 | 0;
         var$0 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
         if (var$0) continue label$26;
         break label$26;
        } while (1);
        $206 = (wasm2asm_i32$2 = var$1 >>> 0 > 4095 >>> 0, wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = 4095, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
        break label$21;
       };
       HEAP32[28796 >> 2] = var$3 | var$2 | 0;
       var$3 = var$0 + 8 | 0;
       $187 = var$0;
      };
      var$2 = $187;
      HEAP32[var$3 >> 2] = var$1;
      HEAP32[(var$2 + 12 | 0) >> 2] = var$1;
      HEAP32[(var$1 + 12 | 0) >> 2] = var$0;
      HEAP32[(var$1 + 8 | 0) >> 2] = var$2;
      return;
     };
     $206 = 4095;
    };
    var$1 = $206;
    HEAP32[29244 >> 2] = var$1;
   };
   return;
  };
  HEAP32[(var$1 + 4 | 0) >> 2] = var$0 | 1 | 0;
  HEAP32[(var$1 + var$0 | 0) >> 2] = var$0;
 }
 
 function f9(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
  var$1 = HEAPU32[var$0 >> 2] | 0;
  if (var$1) block : {
   f9(var$1 + 16384 | 0 | 0);
   f8(HEAPU32[var$0 >> 2] | 0 | 0);
  };
 }
 
 function f10(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0;
  var$2 = var$1 & 65535 | 0;
  if (var$2 >>> 0 <= 3 >>> 0) block : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       switch (var$2 | 0) {
       case 0:
        break label$5;
       case 1:
        break label$4;
       case 2:
        break label$3;
       case 3:
        break label$2;
       default:
        break label$5;
       };
      };
      var$1 = HEAPU32[(var$0 + 28 | 0) >> 2] | 0;
      var$0 = var$1 >> 31 | 0;
      return ((var$1 + var$0 | 0) ^ var$0 | 0) << 3 | 0 | ((var$1 >>> 29 | 0) & 4 | 0) | 0 | 0;
     };
     var$1 = HEAPU32[(var$0 + 32 | 0) >> 2] | 0;
     var$0 = var$1 >> 31 | 0;
     return ((var$1 + var$0 | 0) ^ var$0 | 0) << 3 | 0 | ((var$1 >>> 29 | 0) & 4 | 0) | 0 | 0;
    };
    var$1 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
    var$0 = var$1 >> 31 | 0;
    return ((var$1 + var$0 | 0) ^ var$0 | 0) << 3 | 0 | ((var$1 >>> 29 | 0) & 4 | 0) | 0 | 0;
   };
   var$1 = HEAPU32[(var$0 + 12 | 0) >> 2] | 0;
   var$0 = var$1 >> 31 | 0;
   return ((var$1 + var$0 | 0) ^ var$0 | 0) << 3 | 0 | ((var$1 >>> 29 | 0) & 4 | 0) | 0 | 0;
  };
  var$2 = 19;
  var$1 = var$1 + 4294967292 | 0;
  if ((var$1 & 65535 | 0) >>> 0 <= 4 >>> 0) var$2 = HEAPU32[((var$0 + ((var$1 & 65535 | 0) << 2 | 0) | 0) + 40 | 0) >> 2] | 0;
  return var$2 | 0;
 }
 
 function f11(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
  var$3 = var$1 & 65535 | 0;
  if (var$3 >>> 0 <= 3 >>> 0) block : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       switch (var$3 | 0) {
       case 0:
        break label$5;
       case 1:
        break label$2;
       case 2:
        break label$4;
       case 3:
        break label$3;
       default:
        break label$5;
       };
      };
      HEAP32[(var$0 + 28 | 0) >> 2] = f12(var$2 | 0) | 0;
      return;
     };
     HEAP32[(var$0 + 8 | 0) >> 2] = f12(var$2 | 0) | 0;
     return;
    };
    HEAP32[(var$0 + 12 | 0) >> 2] = f12(var$2 | 0) | 0;
    return;
   };
   HEAP32[(var$0 + 32 | 0) >> 2] = f12(var$2 | 0) | 0;
   return;
  };
  var$1 = var$1 + 4294967292 | 0;
  if ((var$1 & 65535 | 0) >>> 0 <= 4 >>> 0) block9 : {
   HEAP32[((var$0 + ((var$1 & 65535 | 0) << 2 | 0) | 0) + 40 | 0) >> 2] = var$2;
   return;
  };
  f13();
  abort();
 }
 
 function f12(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, wasm2asm_i32$0 = 0;
  var$1 = global$0 - 16 | 0;
  global$0 = var$1;
  f17(var$1 + 8 | 0 | 0, var$0 | 0);
  if ((HEAPU8[(var$1 + 8 | 0) >> 0] | 0 | 0) == (0 | 0)) block : {
   var$0 = HEAPU32[(var$1 + 12 | 0) >> 2] | 0;
   global$0 = var$1 + 16 | 0;
   return var$0 | 0;
  };
  f13();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function f13() {
  f59(24144 | 0, 17 | 0);
  abort();
 }
 
 function f14(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
  var$2 = var$0 + 12 | 0;
  var$1 = (HEAPU32[var$2 >> 2] | 0) + 1 | 0;
  HEAP32[var$2 >> 2] = var$1;
  var$4 = var$0 + 4 | 0;
  $15 = var$1;
  var$1 = HEAPU32[(var$0 + 32 | 0) >> 2] | 0;
  var$3 = var$1 >> 31 | 0;
  f15(var$4 | 0, $15 | 0, ((var$1 + var$3 | 0) ^ var$3 | 0) << 3 | 0 | ((var$1 >>> 29 | 0) & 4 | 0) | 0 | 0);
  var$1 = (HEAPU32[var$2 >> 2] | 0) + 1 | 0;
  HEAP32[var$2 >> 2] = var$1;
  $36 = var$1;
  var$1 = var$0 + 8 | 0;
  var$0 = HEAPU32[var$1 >> 2] | 0;
  var$3 = var$0 >> 31 | 0;
  f15(var$4 | 0, $36 | 0, ((var$0 + var$3 | 0) ^ var$3 | 0) << 3 | 0 | ((var$0 >>> 29 | 0) & 4 | 0) | 0 | 0);
  HEAP32[var$1 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
 }
 
 function f15(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
  var$6 = global$0 - 16400 | 0;
  global$0 = var$6;
  var$4 = var$1 << 2 | 0;
  label$1 : {
   label$2 : do {
    var$3 = HEAPU32[var$0 >> 2] | 0;
    if ((var$3 | 0) == (0 | 0)) block : {
     var$5 = f95(var$6 | 0, 0 | 0, 16384 | 0) | 0;
     var$3 = f18(16388 | 0, 4 | 0, var$5 + 16384 | 0 | 0) | 0;
     if ((var$3 | 0) == (0 | 0)) break label$1;
     var$5 = f94(var$3 | 0, var$5 | 0, 16384 | 0) | 0;
     HEAP32[(var$5 + 16384 | 0) >> 2] = 0;
     f67(var$0 | 0);
     HEAP32[var$0 >> 2] = var$5;
    };
    if (var$1 >>> 0 >= 4096 >>> 0) block11 : {
     var$4 = var$4 + 4294950912 | 0;
     var$0 = var$3 + 16384 | 0;
     var$1 = var$1 + 4294963200 | 0;
     continue label$2;
    };
    break label$2;
   } while (1);
   HEAP32[(var$3 + var$4 | 0) >> 2] = var$2;
   global$0 = var$6 + 16400 | 0;
   return;
  };
  abort();
 }
 
 function f16(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, var$7 = 0, var$8 = 0, var$9 = 0, var$10 = 0, var$11 = 0, var$12 = 0, var$13 = 0, var$14 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  var$2 = global$0 - 7200 | 0;
  global$0 = var$2;
  f17(var$2 + 3616 | 0 | 0, var$1 | 0);
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      var$1 = HEAPU8[(var$2 + 3616 | 0) >> 0] | 0;
      if ((var$1 & 7 | 0 | 0) != (4 | 0)) block : {
       if ((var$1 | 0) != (5 | 0)) break label$1;
       var$6 = HEAPU32[(var$2 + 3620 | 0) >> 2] | 0;
       var$1 = 0;
       label$6 : do {
        HEAP32[((var$2 + 4 | 0) + var$1 | 0) >> 2] = 1;
        var$1 = var$1 + 4 | 0;
        if ((var$1 | 0) != (28 | 0)) continue label$6;
        break label$6;
       } while (1);
       var$3 = HEAPU32[(var$0 + 64 | 0) >> 2] | 0;
       var$1 = $_rust___wbg_f_low_level_vm_load_component(HEAPU32[var$0 >> 2] | 0 | 0, var$6 | 0, var$2 + 4 | 0 | 0, var$3 | 0) | 0;
       var$7 = HEAPU32[(var$2 + 4 | 0) >> 2] | 0;
       if ((var$1 | 0) == (0 | 0)) break label$4;
       var$4 = var$0 + 60 | 0;
       var$6 = var$2 + 7200 | 0;
       var$8 = HEAPU32[(var$2 + 28 | 0) >> 2] | 0;
       var$9 = HEAPU32[(var$2 + 24 | 0) >> 2] | 0;
       var$10 = HEAPU32[(var$2 + 20 | 0) >> 2] | 0;
       var$11 = HEAPU32[(var$2 + 16 | 0) >> 2] | 0;
       var$12 = HEAPU32[(var$2 + 12 | 0) >> 2] | 0;
       var$13 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
       var$5 = var$3;
       label$7 : do {
        var$1 = HEAPU32[var$4 >> 2] | 0;
        if ((var$1 | 0) == (0 | 0)) block13 : {
         var$1 = var$2 + 3616 | 0;
         label$9 : do {
          i64toi32_i32$1 = var$1;
          i64toi32_i32$0 = 19;
          HEAP32[i64toi32_i32$1 >> 2] = 19;
          (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
          i64toi32_i32$1 = var$1 + 8 | 0;
          i64toi32_i32$0 = 19;
          HEAP32[i64toi32_i32$1 >> 2] = 19;
          (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
          i64toi32_i32$1 = var$1 + 16 | 0;
          i64toi32_i32$0 = 0;
          HEAP32[i64toi32_i32$1 >> 2] = 19;
          (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
          HEAP32[(var$1 + 24 | 0) >> 2] = 19;
          var$1 = var$1 + 28 | 0;
          if ((var$1 | 0) != (var$6 | 0)) continue label$9;
          break label$9;
         } while (1);
         f94(var$2 + 32 | 0 | 0, var$2 + 3616 | 0 | 0, 3584 | 0) | 0;
         var$1 = f18(3588 | 0, 4 | 0, var$2 + 3616 | 0 | 0) | 0;
         if ((var$1 | 0) == (0 | 0)) break label$2;
         var$14 = f94(var$1 | 0, var$2 + 32 | 0 | 0, 3584 | 0) | 0;
         HEAP32[(var$14 + 3584 | 0) >> 2] = 0;
         f19(var$4 | 0);
         HEAP32[var$4 >> 2] = var$14;
        };
        if (var$5 >>> 0 >= 128 >>> 0) block15 : {
         var$4 = var$1 + 3584 | 0;
         var$5 = var$5 + 4294967168 | 0;
         continue label$7;
        };
        break label$7;
       } while (1);
       var$1 = var$1 + Math_imul(var$5, 28) | 0;
       HEAP32[(var$1 + 4 | 0) >> 2] = var$13;
       HEAP32[var$1 >> 2] = var$7;
       HEAP32[(var$1 + 8 | 0) >> 2] = var$12;
       HEAP32[(var$1 + 12 | 0) >> 2] = var$11;
       HEAP32[(var$1 + 16 | 0) >> 2] = var$10;
       HEAP32[(var$1 + 20 | 0) >> 2] = var$9;
       HEAP32[(var$1 + 24 | 0) >> 2] = var$8;
       var$1 = var$0 + 64 | 0;
       HEAP32[var$1 >> 2] = (HEAPU32[var$1 >> 2] | 0) + 1 | 0;
       break label$3;
      };
      var$3 = HEAPU32[(var$2 + 3620 | 0) >> 2] | 0;
      break label$3;
     };
     var$3 = var$7;
    };
    global$0 = var$2 + 7200 | 0;
    return var$3 | 0;
   };
   abort();
  };
  f13();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function f17(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              switch (var$1 & 7 | 0 | 0) {
              case 0:
               break label$12;
              case 1:
               break label$2;
              case 2:
               break label$2;
              case 3:
               break label$10;
              case 4:
               break label$9;
              case 5:
               break label$11;
              case 6:
               break label$8;
              case 7:
               break label$7;
              default:
               break label$12;
              };
             };
             HEAP8[var$0 >> 0] = 0;
             break label$1;
            };
            HEAP8[var$0 >> 0] = 5;
            HEAP32[(var$0 + 4 | 0) >> 2] = var$1 >>> 4 | 0;
            return;
           };
           var$2 = __wasm_rotl_i32(var$1 + 4294967293 | 0, 29) | 0;
           if (var$2 >>> 0 > 3 >>> 0) break label$2;
           var$1 = 2;
           label$13 : {
            switch (var$2 | 0) {
            case 0:
             break label$13;
            case 1:
             break label$6;
            case 2:
             break label$4;
            case 3:
             break label$3;
            default:
             break label$13;
            };
           };
           HEAP8[(var$0 + 1 | 0) >> 0] = 0;
           break label$5;
          };
          HEAP8[var$0 >> 0] = 0;
          HEAP32[(var$0 + 4 | 0) >> 2] = 0 - (var$1 >>> 3 | 0) | 0;
          return;
         };
         HEAP8[var$0 >> 0] = 4;
         break label$1;
        };
        var$2 = 6;
        var$3 = (var$1 >>> 3 | 0) & 3 | 0;
        if (var$3) block : {
         if ((var$3 | 0) != (1 | 0)) break label$2;
         var$2 = 7;
        };
        HEAP8[var$0 >> 0] = var$2;
        HEAP32[(var$0 + 4 | 0) >> 2] = var$1 >>> 5 | 0;
        return;
       };
       HEAP8[(var$0 + 1 | 0) >> 0] = 1;
      };
      var$1 = 3;
      break label$3;
     };
     var$1 = 1;
    };
    HEAP8[var$0 >> 0] = var$1;
    return;
   };
   f13();
   abort();
  };
  HEAP32[(var$0 + 4 | 0) >> 2] = var$1 >>> 3 | 0;
 }
 
 function f18(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
  label$1 : {
   label$2 : {
    if (var$1 >>> 0 <= 8 >>> 0) block : {
     var$3 = f60(var$0 | 0) | 0;
     if (var$3) break label$2;
     break label$1;
    };
    var$3 = f63(var$1 | 0, var$0 | 0) | 0;
    if ((var$3 | 0) == (0 | 0)) break label$1;
   };
   return var$3 | 0;
  };
  HEAP32[(var$2 + 4 | 0) >> 2] = var$0;
  HEAP32[var$2 >> 2] = 0;
  HEAP32[(var$2 + 8 | 0) >> 2] = var$1;
  return 0 | 0;
 }
 
 function f19(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
  var$1 = HEAPU32[var$0 >> 2] | 0;
  if (var$1) block : {
   f19(var$1 + 3584 | 0 | 0);
   f8(HEAPU32[var$0 >> 2] | 0 | 0);
  };
 }
 
 function __wbg_lowlevelvm_free(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  var$1 = global$0 - 208 | 0;
  global$0 = var$1;
  label$1 : {
   if (var$0) block : {
    if (HEAPU32[var$0 >> 2] | 0) break label$1;
    (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
    f94(var$1 + 104 | 0 | 0, var$0 | 0, 104 | 0) | 0;
    var$1 = f94(var$1 | 0, var$1 + 104 | 0 | 4 | 0 | 0, 100 | 0) | 0;
    f8(var$0 | 0);
    $_rust___wbindgen_object_drop_ref(HEAPU32[(var$1 + 4 | 0) >> 2] | 0 | 0);
    f9(var$1 + 8 | 0 | 0);
    if ((HEAPU32[(var$1 + 24 | 0) >> 2] | 0) & 1073741823 | 0) f8(HEAPU32[(var$1 + 20 | 0) >> 2] | 0 | 0);
    f7(var$1 + 64 | 0 | 0);
    f21(HEAPU32[(var$1 + 72 | 0) >> 2] | 0 | 0);
    if (HEAPU32[(var$1 + 80 | 0) >> 2] | 0) $_rust___wbindgen_object_drop_ref(HEAPU32[(var$1 + 84 | 0) >> 2] | 0 | 0);
    $_rust___wbindgen_object_drop_ref(HEAPU32[(var$1 + 88 | 0) >> 2] | 0 | 0);
    $_rust___wbindgen_object_drop_ref(HEAPU32[(var$1 + 92 | 0) >> 2] | 0 | 0);
    global$0 = var$1 + 208 | 0;
    return;
   };
   f22();
   abort();
  };
  f23();
  abort();
 }
 
 function f21(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  var$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0;
  (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$1), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
  label$1 : {
   if ((var$1 | 0) == (0 | 0)) block : {
    if ((HEAPU32[(var$0 + 16 | 0) >> 2] | 0) & 2147483647 | 0) f8(HEAPU32[(var$0 + 12 | 0) >> 2] | 0 | 0);
    f93(var$0 + 20 | 0 | 0);
    var$1 = (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) + 4294967295 | 0;
    (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$1), ((HEAP8[(wasm2asm_i32$0 + 4 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 5 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 6 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 7 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
    if ((var$1 | 0) == (0 | 0)) break label$1;
   };
   return;
  };
  f8(var$0 | 0);
 }
 
 function f22() {
  f59(13344 | 0, 27 | 0);
  abort();
 }
 
 function f23() {
  f59(13376 | 0, 79 | 0);
  abort();
 }
 
 function f24(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, var$7 = 0, var$8 = 0, var$9 = 0, var$10 = 0, var$11 = 0, var$12 = 0, var$13 = 0, var$14 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 = 0;
  var$4 = global$0 - 16 | 0;
  global$0 = var$4;
  label$1 : {
   label$2 : {
    var$8 = HEAPU32[(var$0 + 72 | 0) >> 2] | 0;
    if (HEAPU32[(var$8 + 8 | 0) >> 2] | 0) break label$2;
    (wasm2asm_i32$1 = var$8 + 8 | 0, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
    if (HEAPU32[var$0 >> 2] | 0) break label$2;
    (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
    label$3 : {
     label$4 : {
      label$5 : {
       var$5 = HEAPU32[(var$0 + 32 | 0) >> 2] | 0;
       if ((var$5 | 0) != (4294967295 | 0)) block : {
        if ((HEAPU32[(var$8 + 16 | 0) >> 2] | 0) >>> 0 > var$5 >>> 0) var$2 = HEAPU16[((HEAPU32[(var$8 + 12 | 0) >> 2] | 0) + (var$5 << 1 | 0) | 0) >> 1] | 0;
        var$11 = 1;
        var$2 = ((var$2 >>> 8 | 0) & 3 | 0) + 1 | 0;
        HEAP32[(var$0 + 40 | 0) >> 2] = var$2;
        HEAP32[(var$0 + 32 | 0) >> 2] = var$5 + var$2 | 0;
        (wasm2asm_i32$1 = var$8 + 8 | 0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
        (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
        if ((HEAPU8[(var$0 + 96 | 0) >> 0] | 0 | 0) == (0 | 0)) break label$5;
        var$13 = $_rust___wbg_f_low_level_vm_debug_before(HEAPU32[(var$0 + 92 | 0) >> 2] | 0 | 0, var$5 | 0) | 0;
        if ((HEAPU32[var$0 >> 2] | 0 | 0) == (0 | 0)) break label$4;
        break label$2;
       };
       (wasm2asm_i32$1 = var$8 + 8 | 0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
       (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
       var$8 = 1;
       break label$3;
      };
      var$11 = 0;
     };
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$8 = HEAPU32[(var$0 + 72 | 0) >> 2] | 0;
     if (HEAPU32[(var$8 + 8 | 0) >> 2] | 0) break label$2;
     var$2 = var$8 + 8 | 0;
     (wasm2asm_i32$1 = var$2, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     label$8 : {
      label$9 : {
       label$10 : {
        label$11 : {
         label$12 : {
          label$13 : {
           label$14 : {
            label$15 : {
             label$16 : {
              label$17 : {
               label$18 : {
                label$19 : {
                 label$20 : {
                  label$21 : {
                   label$22 : {
                    label$23 : {
                     label$24 : {
                      label$25 : {
                       label$26 : {
                        label$27 : {
                         label$28 : {
                          label$29 : {
                           label$30 : {
                            label$31 : {
                             label$32 : {
                              label$33 : {
                               label$34 : {
                                label$35 : {
                                 label$36 : {
                                  label$37 : {
                                   label$38 : {
                                    label$39 : {
                                     label$40 : {
                                      label$41 : {
                                       label$42 : {
                                        label$43 : {
                                         label$44 : {
                                          label$45 : {
                                           var$3 = HEAPU32[(var$8 + 16 | 0) >> 2] | 0;
                                           if (var$3 >>> 0 <= var$5 >>> 0) break label$45;
                                           var$6 = var$8 + 12 | 0;
                                           var$7 = HEAPU8[((HEAPU32[var$6 >> 2] | 0) + (var$5 << 1 | 0) | 0) >> 0] | 0;
                                           if (var$7 >>> 0 >= 99 >>> 0) break label$21;
                                           var$10 = var$0 + 4 | 0;
                                           var$9 = var$7 + 4294967283 | 0;
                                           if (var$9 >>> 0 <= 45 >>> 0) block21 : {
                                            label$47 : {
                                             switch (var$9 | 0) {
                                             case 0:
                                              break label$47;
                                             case 1:
                                              break label$45;
                                             case 2:
                                              break label$45;
                                             case 3:
                                              break label$33;
                                             case 4:
                                              break label$34;
                                             case 5:
                                              break label$36;
                                             case 6:
                                              break label$30;
                                             case 7:
                                              break label$45;
                                             case 8:
                                              break label$45;
                                             case 9:
                                              break label$45;
                                             case 10:
                                              break label$45;
                                             case 11:
                                              break label$38;
                                             case 12:
                                              break label$37;
                                             case 13:
                                              break label$32;
                                             case 14:
                                              break label$24;
                                             case 15:
                                              break label$45;
                                             case 16:
                                              break label$45;
                                             case 17:
                                              break label$45;
                                             case 18:
                                              break label$45;
                                             case 19:
                                              break label$45;
                                             case 20:
                                              break label$26;
                                             case 21:
                                              break label$29;
                                             case 22:
                                              break label$40;
                                             case 23:
                                              break label$41;
                                             case 24:
                                              break label$45;
                                             case 25:
                                              break label$42;
                                             case 26:
                                              break label$25;
                                             case 27:
                                              break label$45;
                                             case 28:
                                              break label$27;
                                             case 29:
                                              break label$31;
                                             case 30:
                                              break label$45;
                                             case 31:
                                              break label$45;
                                             case 32:
                                              break label$45;
                                             case 33:
                                              break label$45;
                                             case 34:
                                              break label$45;
                                             case 35:
                                              break label$45;
                                             case 36:
                                              break label$35;
                                             case 37:
                                              break label$44;
                                             case 38:
                                              break label$45;
                                             case 39:
                                              break label$23;
                                             case 40:
                                              break label$45;
                                             case 41:
                                              break label$45;
                                             case 42:
                                              break label$28;
                                             case 43:
                                              break label$45;
                                             case 44:
                                              break label$43;
                                             case 45:
                                              break label$39;
                                             default:
                                              break label$47;
                                             };
                                            };
                                            var$2 = 0;
                                            var$1 = var$5 + 1 | 0;
                                            if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                                            var$1 = var$2 & 7 | 0;
                                            if (var$1 >>> 0 > 5 >>> 0) break label$1;
                                            var$3 = (var$2 & 65528 | 0) >>> 3 | 0;
                                            label$49 : {
                                             switch (var$1 | 0) {
                                             case 0:
                                              break label$49;
                                             case 1:
                                              break label$13;
                                             case 2:
                                              break label$14;
                                             case 3:
                                              break label$12;
                                             case 4:
                                              break label$15;
                                             case 5:
                                              break label$11;
                                             default:
                                              break label$49;
                                             };
                                            };
                                            $127 = var$2 & 65528 | 0;
                                            break label$10;
                                           };
                                           if ((var$7 | 0) == (89 | 0)) break label$22;
                                           if ((var$7 | 0) != (90 | 0)) break label$45;
                                           var$2 = 0;
                                           var$1 = var$5 + 1 | 0;
                                           if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                                           var$3 = f16(var$10 | 0, f10(var$10 | 0, var$2 | 0) | 0 | 0) | 0;
                                           var$1 = var$0 + 64 | 0;
                                           if ((HEAPU32[var$1 >> 2] | 0 | 0) == (0 | 0)) break label$21;
                                           var$2 = var$3 + 128 | 0;
                                           var$3 = Math_imul(var$3, 28) + 12 | 0;
                                           label$51 : do {
                                            var$2 = var$2 + 4294967168 | 0;
                                            if (var$2 >>> 0 < 128 >>> 0) break label$20;
                                            var$3 = var$3 + 4294963712 | 0;
                                            var$1 = HEAPU32[var$1 >> 2] | 0;
                                            var$7 = HEAPU32[(var$1 + 3584 | 0) >> 2] | 0;
                                            var$1 = (wasm2asm_i32$3 = var$7, wasm2asm_i32$1 = var$1 + 3584 | 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                                            if (var$7) continue label$51;
                                            break label$21;
                                            break label$51;
                                           } while (1);
                                          };
                                          (wasm2asm_i32$1 = var$2, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
                                          (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
                                          var$8 = HEAPU32[(var$0 + 88 | 0) >> 2] | 0;
                                          i64toi32_i32$1 = var$4;
                                          i64toi32_i32$0 = 0;
                                          HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = 0;
                                          (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 12 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 13 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 14 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 15 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
                                          $_rust___wbg_f_low_level_vm_evaluate_syscall(var$8 | 0, var$1 | 0, var$5 | 0, var$4 + 8 | 0 | 0);
                                          if ((HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$8;
                                          if (HEAPU32[(var$0 + 76 | 0) >> 2] | 0) break label$2;
                                          var$5 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0;
                                          var$8 = var$0 + 76 | 0;
                                          (wasm2asm_i32$1 = var$8, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
                                          if (HEAPU32[(var$0 + 80 | 0) >> 2] | 0) $_rust___wbindgen_object_drop_ref(HEAPU32[(var$0 + 84 | 0) >> 2] | 0 | 0);
                                          HEAP32[(var$0 + 84 | 0) >> 2] = var$5;
                                          i64toi32_i32$1 = var$8;
                                          i64toi32_i32$0 = 1;
                                          (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
                                          (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
                                          var$8 = 2;
                                          if ((var$11 | 0) == (0 | 0)) break label$3;
                                          $_rust___wbindgen_object_drop_ref(var$13 | 0);
                                          break label$3;
                                         };
                                         var$2 = 0;
                                         var$1 = var$5 + 1 | 0;
                                         if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                                         var$1 = var$0 + 32 | 0;
                                         HEAP32[(var$0 + 36 | 0) >> 2] = HEAPU32[var$1 >> 2] | 0;
                                         HEAP32[var$1 >> 2] = f25(var$6 | 0, var$2 & 65535 | 0 | 0) | 0;
                                         break label$9;
                                        };
                                        f14(var$10 | 0);
                                        break label$9;
                                       };
                                       var$1 = var$0 + 52 | 0;
                                       var$3 = HEAPU32[var$1 >> 2] | 0;
                                       f17(var$4 + 8 | 0 | 0, var$3 | 0);
                                       var$2 = var$0 + 20 | 0;
                                       if ((HEAPU8[(var$4 + 8 | 0) >> 0] | 0 | 0) != (1 | 0)) block27 : {
                                        f26(var$2 | 0, 5 | 0, var$3 | 0, 27 | 0);
                                        HEAP32[var$1 >> 2] = 19;
                                       };
                                       f26(var$2 | 0, 6 | 0, 27 | 0, 27 | 0);
                                       break label$9;
                                      };
                                      var$7 = 0;
                                      var$1 = 0;
                                      var$2 = var$5 + 1 | 0;
                                      if (var$3 >>> 0 > var$2 >>> 0) var$1 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$2 << 1 | 0) | 0) >> 1] | 0;
                                      var$2 = var$0 + 16 | 0;
                                      f27(var$4 + 8 | 0 | 0, var$0 + 8 | 0 | 0, HEAPU32[var$2 >> 2] | 0 | 0);
                                      HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                                      var$2 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0;
                                      var$9 = (HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) == (1 | 0);
                                      var$3 = 19;
                                      var$1 = var$1 & 65535 | 0;
                                      var$10 = HEAPU32[(var$8 + 16 | 0) >> 2] | 0;
                                      var$12 = var$5 + 2 | 0;
                                      if (var$10 >>> 0 > var$12 >>> 0) var$7 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$12 << 1 | 0) | 0) >> 1] | 0;
                                      var$1 = var$1 << 5 | 0;
                                      var$2 = (wasm2asm_i32$3 = var$9, wasm2asm_i32$1 = var$2, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                                      label$57 : {
                                       var$9 = var$5 + 3 | 0;
                                       if (var$10 >>> 0 <= var$9 >>> 0) break label$57;
                                       var$9 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$9 << 1 | 0) | 0) >> 1] | 0;
                                       if ((var$9 | 0) == (0 | 0)) break label$57;
                                       var$3 = var$9 << 5 | 0 | 7 | 0;
                                      };
                                      var$9 = var$1 | 7 | 0;
                                      var$1 = var$0 + 20 | 0;
                                      f26(var$1 | 0, 0 | 0, var$3 | 0, 27 | 0);
                                      f26(var$1 | 0, 0 | 0, (wasm2asm_i32$3 = var$7 & 65535 | 0, wasm2asm_i32$1 = 11, wasm2asm_i32$2 = 3, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2) | 0, 27 | 0);
                                      if (var$2 & 8 | 0) break label$18;
                                      f26(var$1 | 0, 12 | 0, var$9 | 0, var$2 | 0);
                                      break label$9;
                                     };
                                     var$2 = 0;
                                     var$1 = 0;
                                     var$7 = var$5 + 1 | 0;
                                     if (var$3 >>> 0 > var$7 >>> 0) var$1 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$7 << 1 | 0) | 0) >> 1] | 0;
                                     var$1 = (var$1 & 65535 | 0) << 5 | 0;
                                     var$7 = var$5 + 2 | 0;
                                     if (var$3 >>> 0 > var$7 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$7 << 1 | 0) | 0) >> 1] | 0;
                                     var$1 = var$1 | 7 | 0;
                                     var$7 = (var$2 & 65535 | 0) << 5 | 0 | 7 | 0;
                                     var$2 = 19;
                                     label$60 : {
                                      var$9 = var$5 + 3 | 0;
                                      if (var$3 >>> 0 <= var$9 >>> 0) break label$60;
                                      var$3 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$9 << 1 | 0) | 0) >> 1] | 0;
                                      if ((var$3 | 0) == (0 | 0)) break label$60;
                                      var$2 = var$3 << 5 | 0 | 7 | 0;
                                     };
                                     var$3 = var$0 + 20 | 0;
                                     f26(var$3 | 0, 0 | 0, var$2 | 0, 27 | 0);
                                     f26(var$3 | 0, 11 | 0, var$1 | 0, var$7 | 0);
                                     break label$9;
                                    };
                                    var$2 = var$0 + 12 | 0;
                                    var$1 = HEAPU32[var$2 >> 2] | 0;
                                    HEAP32[(var$0 + 16 | 0) >> 2] = var$1 + 4294967295 | 0;
                                    var$3 = var$0 + 8 | 0;
                                    f27(var$4 + 8 | 0 | 0, var$3 | 0, var$1 | 0);
                                    HEAP32[(var$0 + 36 | 0) >> 2] = f12((wasm2asm_i32$3 = (HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2asm_i32$1 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2) | 0) | 0;
                                    f27(var$4 + 8 | 0 | 0, var$3 | 0, (HEAPU32[var$2 >> 2] | 0) + 1 | 0 | 0);
                                    HEAP32[var$2 >> 2] = f12((wasm2asm_i32$3 = (HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2asm_i32$1 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2) | 0) | 0;
                                    break label$9;
                                   };
                                   HEAP32[(var$0 + 32 | 0) >> 2] = HEAPU32[(var$0 + 36 | 0) >> 2] | 0;
                                   break label$9;
                                  };
                                  var$2 = 0;
                                  var$1 = var$5 + 1 | 0;
                                  if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                                  HEAP32[(var$0 + 36 | 0) >> 2] = ((HEAPU32[(var$0 + 32 | 0) >> 2] | 0) + (var$2 & 65535 | 0) | 0) - (HEAPU32[(var$0 + 40 | 0) >> 2] | 0) | 0;
                                  break label$9;
                                 };
                                 var$2 = var$0 + 16 | 0;
                                 f27(var$4 + 8 | 0 | 0, var$0 + 8 | 0 | 0, HEAPU32[var$2 >> 2] | 0 | 0);
                                 HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                                 var$1 = (wasm2asm_i32$3 = (HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2asm_i32$1 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                                 var$2 = 0;
                                 var$3 = var$5 + 1 | 0;
                                 if ((HEAPU32[(var$8 + 16 | 0) >> 2] | 0) >>> 0 > var$3 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$3 << 1 | 0) | 0) >> 1] | 0;
                                 f11(var$10 | 0, var$2 | 0, var$1 | 0);
                                 break label$9;
                                };
                                var$2 = var$0 + 16 | 0;
                                f27(var$4 + 8 | 0 | 0, var$0 + 8 | 0 | 0, HEAPU32[var$2 >> 2] | 0 | 0);
                                HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                                var$2 = f12((wasm2asm_i32$3 = (HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2asm_i32$1 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2) | 0) | 0;
                                var$1 = var$0 + 32 | 0;
                                HEAP32[(var$0 + 36 | 0) >> 2] = HEAPU32[var$1 >> 2] | 0;
                                HEAP32[var$1 >> 2] = f25(var$6 | 0, var$2 | 0) | 0;
                                break label$9;
                               };
                               var$7 = var$0 + 8 | 0;
                               var$1 = 0;
                               var$2 = var$5 + 1 | 0;
                               if (var$3 >>> 0 > var$2 >>> 0) var$1 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$2 << 1 | 0) | 0) >> 1] | 0;
                               var$2 = var$0 + 16 | 0;
                               f27(var$4 + 8 | 0 | 0, var$7 | 0, HEAPU32[var$2 >> 2] | 0 | 0);
                               HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) - (var$1 & 65535 | 0) | 0;
                               break label$9;
                              };
                              var$2 = 0;
                              var$1 = 0;
                              var$7 = var$5 + 1 | 0;
                              if (var$3 >>> 0 > var$7 >>> 0) var$1 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$7 << 1 | 0) | 0) >> 1] | 0;
                              var$1 = f12(f10(var$10 | 0, var$1 | 0) | 0 | 0) | 0;
                              var$3 = var$5 + 2 | 0;
                              if ((HEAPU32[(var$8 + 16 | 0) >> 2] | 0) >>> 0 > var$3 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$3 << 1 | 0) | 0) >> 1] | 0;
                              $576 = var$1 - (var$2 & 65535 | 0) | 0;
                              var$2 = var$0 + 16 | 0;
                              var$1 = (HEAPU32[var$2 >> 2] | 0) + 1 | 0;
                              f28(var$0 + 8 | 0 | 0, $576 | 0, var$1 | 0) | 0;
                              HEAP32[var$2 >> 2] = var$1;
                              break label$9;
                             };
                             var$2 = 0;
                             var$1 = var$5 + 1 | 0;
                             if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                             f26(var$0 + 20 | 0 | 0, 1 | 0, (var$2 & 65535 | 0) << 5 | 0 | 7 | 0 | 0, 27 | 0);
                             break label$9;
                            };
                            f26(var$0 + 20 | 0 | 0, 8 | 0, 27 | 0, 27 | 0);
                            break label$9;
                           };
                           var$2 = 0;
                           var$1 = var$5 + 1 | 0;
                           if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                           var$2 = f10(var$10 | 0, var$2 | 0) | 0;
                           var$1 = var$0 + 16 | 0;
                           $621 = var$1;
                           var$1 = (HEAPU32[var$1 >> 2] | 0) + 1 | 0;
                           HEAP32[$621 >> 2] = var$1;
                           f15(var$0 + 8 | 0 | 0, var$1 | 0, var$2 | 0);
                           break label$9;
                          };
                          var$2 = var$0 + 16 | 0;
                          f27(var$4 + 8 | 0 | 0, var$0 + 8 | 0 | 0, HEAPU32[var$2 >> 2] | 0 | 0);
                          HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                          f26(var$0 + 20 | 0 | 0, 4 | 0, (wasm2asm_i32$3 = (HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) == (1 | 0), wasm2asm_i32$1 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2) | 0, 27 | 0);
                          break label$9;
                         };
                         var$2 = 0;
                         var$1 = 0;
                         var$7 = var$5 + 1 | 0;
                         if (var$3 >>> 0 > var$7 >>> 0) var$1 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$7 << 1 | 0) | 0) >> 1] | 0;
                         var$7 = var$5 + 2 | 0;
                         if (var$3 >>> 0 > var$7 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$7 << 1 | 0) | 0) >> 1] | 0;
                         f27(var$4 + 8 | 0 | 0, var$0 + 8 | 0 | 0, HEAPU32[(var$0 + 16 | 0) >> 2] | 0 | 0);
                         if ((HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) != (1 | 0)) break label$17;
                         $685 = f12(HEAPU32[(var$4 + 12 | 0) >> 2] | 0 | 0) | 0;
                         break label$16;
                        };
                        var$1 = var$0 + 8 | 0;
                        var$2 = var$0 + 16 | 0;
                        f27(var$4 + 8 | 0 | 0, var$1 | 0, HEAPU32[var$2 >> 2] | 0 | 0);
                        var$3 = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                        HEAP32[var$2 >> 2] = var$3;
                        var$7 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0;
                        var$9 = HEAPU32[(var$4 + 8 | 0) >> 2] | 0;
                        f27(var$4 + 8 | 0 | 0, var$1 | 0, var$3 | 0);
                        var$3 = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                        HEAP32[var$2 >> 2] = var$3;
                        var$6 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0;
                        var$10 = HEAPU32[(var$4 + 8 | 0) >> 2] | 0;
                        f27(var$4 + 8 | 0 | 0, var$1 | 0, var$3 | 0);
                        HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                        var$1 = (wasm2asm_i32$3 = (var$10 | 0) == (1 | 0), wasm2asm_i32$1 = var$6, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                        var$6 = (HEAPU32[(var$4 + 8 | 0) >> 2] | 0 | 0) == (1 | 0);
                        var$10 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0;
                        var$2 = var$0 + 20 | 0;
                        var$3 = (wasm2asm_i32$3 = (var$9 | 0) == (1 | 0), wasm2asm_i32$1 = var$7, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                        if ((var$3 & 8 | 0 | 0) == (0 | 0)) f26(var$2 | 0, 10 | 0, var$3 | 0, 27 | 0);
                        var$7 = (wasm2asm_i32$3 = var$6, wasm2asm_i32$1 = var$10, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                        if ((var$1 & 8 | 0 | 0) == (0 | 0)) f26(var$2 | 0, 10 | 0, var$1 | 0, 27 | 0);
                        f26(var$2 | 0, 0 | 0, var$1 | 0, 27 | 0);
                        f26(var$2 | 0, 7 | 0, var$3 | 0, var$7 | 0);
                        break label$9;
                       };
                       var$2 = 0;
                       var$1 = var$5 + 1 | 0;
                       if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                       f26(var$0 + 20 | 0 | 0, 3 | 0, (var$2 & 65535 | 0) << 5 | 0 | 7 | 0 | 0, 27 | 0);
                       break label$9;
                      };
                      f26(var$0 + 20 | 0 | 0, 9 | 0, 27 | 0, 27 | 0);
                      break label$9;
                     };
                     var$2 = 0;
                     var$1 = var$5 + 1 | 0;
                     if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                     f26(var$0 + 20 | 0 | 0, 2 | 0, (var$2 & 65535 | 0) << 5 | 0 | 7 | 0 | 0, 27 | 0);
                     break label$9;
                    };
                    var$2 = 0;
                    var$1 = var$5 + 1 | 0;
                    if (var$3 >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                    var$1 = var$0 + 32 | 0;
                    HEAP32[var$1 >> 2] = ((HEAPU32[var$1 >> 2] | 0) + (var$2 & 65535 | 0) | 0) - (HEAPU32[(var$0 + 40 | 0) >> 2] | 0) | 0;
                    break label$9;
                   };
                   var$1 = var$0 + 8 | 0;
                   var$2 = var$0 + 16 | 0;
                   f27(var$4 + 8 | 0 | 0, var$1 | 0, HEAPU32[var$2 >> 2] | 0 | 0);
                   var$3 = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                   HEAP32[var$2 >> 2] = var$3;
                   var$7 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0;
                   var$9 = HEAPU32[(var$4 + 8 | 0) >> 2] | 0;
                   f27(var$4 + 8 | 0 | 0, var$1 | 0, var$3 | 0);
                   HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 4294967295 | 0;
                   var$12 = HEAPU32[(var$4 + 12 | 0) >> 2] | 0;
                   var$14 = HEAPU32[(var$4 + 8 | 0) >> 2] | 0;
                   var$2 = 0;
                   var$1 = var$5 + 1 | 0;
                   if ((HEAPU32[(var$8 + 16 | 0) >> 2] | 0) >>> 0 > var$1 >>> 0) var$2 = HEAPU16[((HEAPU32[var$6 >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
                   var$3 = f16(var$10 | 0, f10(var$10 | 0, var$2 | 0) | 0 | 0) | 0;
                   var$1 = var$0 + 64 | 0;
                   if ((HEAPU32[var$1 >> 2] | 0 | 0) == (0 | 0)) break label$21;
                   var$9 = (wasm2asm_i32$3 = (var$9 | 0) == (1 | 0), wasm2asm_i32$1 = var$7, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                   var$6 = (wasm2asm_i32$3 = (var$14 | 0) == (1 | 0), wasm2asm_i32$1 = var$12, wasm2asm_i32$2 = 19, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                   var$2 = var$3 + 128 | 0;
                   var$3 = Math_imul(var$3, 28) + 16 | 0;
                   label$76 : do {
                    var$2 = var$2 + 4294967168 | 0;
                    if (var$2 >>> 0 < 128 >>> 0) break label$19;
                    var$3 = var$3 + 4294963712 | 0;
                    var$1 = HEAPU32[var$1 >> 2] | 0;
                    var$7 = HEAPU32[(var$1 + 3584 | 0) >> 2] | 0;
                    var$1 = (wasm2asm_i32$3 = var$7, wasm2asm_i32$1 = var$1 + 3584 | 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
                    if (var$7) continue label$76;
                    break label$76;
                   } while (1);
                  };
                  f13();
                  abort();
                 };
                 var$2 = f12(HEAPU32[((HEAPU32[var$1 >> 2] | 0) + var$3 | 0) >> 2] | 0 | 0) | 0;
                 var$1 = var$0 + 32 | 0;
                 HEAP32[(var$0 + 36 | 0) >> 2] = HEAPU32[var$1 >> 2] | 0;
                 HEAP32[var$1 >> 2] = f25(var$6 | 0, var$2 | 0) | 0;
                 break label$9;
                };
                var$2 = (HEAPU32[var$1 >> 2] | 0) + var$3 | 0;
                HEAP32[var$2 >> 2] = var$6;
                HEAP32[(var$2 + 4294967292 | 0) >> 2] = var$9;
                break label$9;
               };
               f26(var$1 | 0, 13 | 0, var$9 | 0, var$2 | 0);
               break label$9;
              };
              $685 = 0;
             };
             var$3 = $685;
             if ((var$3 | 0) != (var$2 & 65535 | 0 | 0)) break label$9;
             var$2 = var$0 + 32 | 0;
             HEAP32[var$2 >> 2] = ((HEAPU32[var$2 >> 2] | 0) + (var$1 & 65535 | 0) | 0) - (HEAPU32[(var$0 + 40 | 0) >> 2] | 0) | 0;
             break label$9;
            };
            $127 = (var$3 & 65535 | 0) << 5 | 0 | 15 | 0;
            break label$10;
           };
           $127 = (var$3 & 65535 | 0) << 5 | 0 | 7 | 0;
           break label$10;
          };
          $127 = (var$3 & 65535 | 0) << 5 | 0 | 15 | 0;
          break label$10;
         };
         $127 = var$2 & 65535 | 0;
         break label$10;
        };
        $127 = (var$3 & 65535 | 0) << 5 | 0 | 15 | 0;
       };
       var$2 = $127;
       var$1 = var$0 + 16 | 0;
       $964 = var$1;
       var$1 = (HEAPU32[var$1 >> 2] | 0) + 1 | 0;
       HEAP32[$964 >> 2] = var$1;
       f15(var$0 + 8 | 0 | 0, var$1 | 0, var$2 | 0);
      };
      (wasm2asm_i32$1 = var$8 + 8 | 0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     };
     var$8 = 0;
     if ((var$11 | 0) == (0 | 0)) break label$3;
     $_rust___wbg_f_low_level_vm_debug_after(HEAPU32[(var$0 + 92 | 0) >> 2] | 0 | 0, var$13 | 0, var$5 | 0);
    };
    global$0 = var$4 + 16 | 0;
    return var$8 | 0;
   };
   f29();
   abort();
  };
  f13();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function f25(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   if (HEAPU32[(var$0 + 8 | 0) >> 2] | 0) block : {
    var$2 = var$0 + 8 | 0;
    var$0 = var$1 + 64 | 0;
    var$1 = var$1 << 2 | 0;
    label$3 : do {
     var$0 = var$0 + 4294967232 | 0;
     if (var$0 >>> 0 < 64 >>> 0) break label$1;
     var$1 = var$1 + 4294967040 | 0;
     var$2 = HEAPU32[var$2 >> 2] | 0;
     var$3 = HEAPU32[(var$2 + 256 | 0) >> 2] | 0;
     var$2 = (wasm2asm_i32$2 = var$3, wasm2asm_i32$0 = var$2 + 256 | 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
     if (var$3) continue label$3;
     break label$3;
    } while (1);
   };
   f13();
   abort();
  };
  return HEAPU32[((HEAPU32[var$2 >> 2] | 0) + var$1 | 0) >> 2] | 0 | 0;
 }
 
 function f26(var$0, var$1, var$2, var$3) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var$3 = var$3 | 0;
  var var$4 = 0, var$5 = 0, var$6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
  var$4 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
  var$5 = var$4 + 3 | 0;
  var$6 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
  if (var$5 >>> 0 < var$6 >>> 0) block : {
   if ((var$4 >>> 0 > 4294967292 >>> 0 | var$6 >>> 0 < var$5 >>> 0 | 0 | 0) == (0 | 0)) block48 : {
    HEAP32[(var$0 + 8 | 0) >> 2] = var$5;
    var$0 = (HEAPU32[var$0 >> 2] | 0) + (var$4 << 2 | 0) | 0;
    HEAP32[var$0 >> 2] = var$1;
    HEAP32[(var$0 + 4 | 0) >> 2] = var$2;
    HEAP32[(var$0 + 8 | 0) >> 2] = var$3;
    return;
   };
   f13();
   abort();
  };
  f13();
  abort();
 }
 
 function f27(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (HEAPU32[var$1 >> 2] | 0) block : {
     var$4 = var$2 + 4096 | 0;
     var$2 = var$2 << 2 | 0;
     label$4 : do {
      var$4 = var$4 + 4294963200 | 0;
      if (var$4 >>> 0 < 4096 >>> 0) break label$2;
      var$2 = var$2 + 4294950912 | 0;
      var$1 = HEAPU32[var$1 >> 2] | 0;
      var$5 = HEAPU32[(var$1 + 16384 | 0) >> 2] | 0;
      var$1 = (wasm2asm_i32$2 = var$5, wasm2asm_i32$0 = var$1 + 16384 | 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
      if (var$5) continue label$4;
      break label$1;
      break label$4;
     } while (1);
    };
    break label$1;
   };
   HEAP32[(var$0 + 4 | 0) >> 2] = HEAPU32[((HEAPU32[var$1 >> 2] | 0) + var$2 | 0) >> 2] | 0;
   var$3 = 1;
  };
  HEAP32[var$0 >> 2] = var$3;
 }
 
 function f28(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
  var$3 = global$0 - 16 | 0;
  global$0 = var$3;
  f27(var$3 + 8 | 0 | 0, var$0 | 0, var$1 | 0);
  var$1 = 1;
  if ((HEAPU32[(var$3 + 8 | 0) >> 2] | 0 | 0) == (1 | 0)) block : {
   f15(var$0 | 0, var$2 | 0, HEAPU32[(var$3 + 12 | 0) >> 2] | 0 | 0);
   var$1 = 0;
  };
  global$0 = var$3 + 16 | 0;
  return var$1 | 0;
 }
 
 function f29() {
  f59(24176 | 0, 24 | 0);
  abort();
 }
 
 function lowlevelvm_new(var$0, var$1, var$2, var$3, var$4) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var$3 = var$3 | 0;
  var$4 = var$4 | 0;
  var var$5 = 0, var$6 = 0, var$7 = 0, var$8 = 0, var$9 = 0, var$10 = 0, var$11 = 0, var$12 = 0, var$13 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  var$6 = global$0 - 8240 | 0;
  global$0 = var$6;
  label$1 : {
   if (var$0) block : {
    var$5 = HEAPU32[var$0 >> 2] | 0;
    if ((var$5 | 0) == (4294967295 | 0)) break label$1;
    (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$5 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
    var$5 = 0;
    label$3 : do {
     HEAP32[((var$6 + 8 | 0) + var$5 | 0) >> 2] = 19;
     var$5 = var$5 + 4 | 0;
     if ((var$5 | 0) != (20 | 0)) continue label$3;
     break label$3;
    } while (1);
    f95(var$6 + 32 | 0 | 0, 0 | 0, 8192 | 0) | 0;
    label$4 : {
     var$5 = f18(8192 | 0, 4 | 0, var$6 + 8224 | 0 | 0) | 0;
     if ((var$5 | 0) == (0 | 0)) break label$4;
     var$11 = f94(var$5 | 0, var$6 + 32 | 0 | 0, 8192 | 0) | 0;
     var$5 = var$6 + 48 | 0;
     var$7 = var$6 + 24 | 0;
     HEAP32[var$5 >> 2] = HEAPU32[var$7 >> 2] | 0;
     var$9 = var$6 + 40 | 0;
     i64toi32_i32$1 = var$9;
     $57 = i64toi32_i32$1;
     var$10 = var$6 + 16 | 0;
     i64toi32_i32$1 = var$10;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[$57 >> 2] = HEAPU32[i64toi32_i32$1 >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = var$6;
     $70 = i64toi32_i32$1;
     i64toi32_i32$1 = var$6;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 15 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[($70 + 32 | 0) >> 2] = HEAPU32[(i64toi32_i32$1 + 8 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 36 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 37 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 38 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 39 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$8 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     var$12 = HEAPU32[var$8 >> 2] | 0;
     var$13 = var$12 + 1 | 0;
     if (var$13 >>> 0 < var$12 >>> 0) break label$4;
     (wasm2asm_i32$1 = var$8, wasm2asm_i32$2 = var$13), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$8 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     HEAP32[var$7 >> 2] = HEAPU32[var$5 >> 2] | 0;
     i64toi32_i32$1 = var$10;
     $99 = i64toi32_i32$1;
     i64toi32_i32$1 = var$9;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[$99 >> 2] = HEAPU32[i64toi32_i32$1 >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = var$6;
     $110 = i64toi32_i32$1;
     i64toi32_i32$1 = var$6;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 39 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[($110 + 8 | 0) >> 2] = HEAPU32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 12 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 13 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 14 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 15 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[var$5 >> 2] = HEAPU32[var$7 >> 2] | 0;
     i64toi32_i32$1 = var$9;
     $124 = i64toi32_i32$1;
     i64toi32_i32$1 = var$10;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[$124 >> 2] = HEAPU32[i64toi32_i32$1 >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$7 = var$6 + 30 | 0;
     HEAP8[var$7 >> 0] = HEAPU8[(var$6 + 7 | 0) >> 0] | 0;
     i64toi32_i32$1 = var$6;
     $141 = i64toi32_i32$1;
     i64toi32_i32$1 = var$6;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 15 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[($141 + 32 | 0) >> 2] = HEAPU32[(i64toi32_i32$1 + 8 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 36 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 37 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 38 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 39 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP16[(var$6 + 28 | 0) >> 1] = (wasm2asm_i32$1 = var$6, HEAPU8[(wasm2asm_i32$1 + 5 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 6 | 0) >> 0] | 0 | 0) << 8);
     var$5 = f18(104 | 0, 4 | 0, var$6 + 8224 | 0 | 0) | 0;
     if ((var$5 | 0) == (0 | 0)) break label$4;
     HEAP32[(var$5 + 8 | 0) >> 2] = var$3;
     i64toi32_i32$1 = var$5;
     i64toi32_i32$0 = 0;
     HEAP32[i64toi32_i32$1 >> 2] = 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = var$5;
     i64toi32_i32$0 = 0;
     HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 16 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 17 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 18 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 19 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$5 + 20 | 0) >> 2] = 4294967295;
     HEAP32[(var$5 + 24 | 0) >> 2] = var$11;
     i64toi32_i32$1 = var$5;
     i64toi32_i32$0 = 0;
     HEAP32[(i64toi32_i32$1 + 28 | 0) >> 2] = 2048;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 32 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 33 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 34 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 35 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = var$5;
     i64toi32_i32$0 = 4294967295;
     HEAP32[(i64toi32_i32$1 + 36 | 0) >> 2] = 4294967295;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 40 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 41 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 42 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 43 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$5 + 44 | 0) >> 2] = 0;
     i64toi32_i32$1 = var$5;
     $190 = i64toi32_i32$1;
     i64toi32_i32$1 = var$6;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 36 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 37 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 38 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 39 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[($190 + 48 | 0) >> 2] = HEAPU32[(i64toi32_i32$1 + 32 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 52 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 53 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 54 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 55 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     i64toi32_i32$1 = var$5;
     i64toi32_i32$0 = 0;
     HEAP32[(i64toi32_i32$1 + 68 | 0) >> 2] = 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 72 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 73 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 74 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 75 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$5 + 76 | 0) >> 2] = var$8;
     HEAP32[(var$5 + 80 | 0) >> 2] = 0;
     i64toi32_i32$1 = var$5 + 56 | 0;
     $211 = i64toi32_i32$1;
     i64toi32_i32$1 = var$6 + 40 | 0;
     i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
     HEAP32[$211 >> 2] = HEAPU32[i64toi32_i32$1 >> 2] | 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$5 + 64 | 0) >> 2] = HEAPU32[(var$6 + 48 | 0) >> 2] | 0;
     HEAP32[(var$5 + 92 | 0) >> 2] = var$1;
     i64toi32_i32$1 = var$5;
     i64toi32_i32$0 = 0;
     HEAP32[(i64toi32_i32$1 + 84 | 0) >> 2] = 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 88 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 89 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 90 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 91 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$5 + 96 | 0) >> 2] = var$2;
     HEAP8[(var$5 + 100 | 0) >> 0] = (var$4 | 0) != (0 | 0);
     (wasm2asm_i32$1 = var$5, wasm2asm_i32$2 = HEAPU16[(var$6 + 28 | 0) >> 1] | 0), HEAP8[(wasm2asm_i32$1 + 101 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 102 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0;
     HEAP8[(var$5 + 103 | 0) >> 0] = HEAPU8[var$7 >> 0] | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     global$0 = var$6 + 8240 | 0;
     return var$5 | 0;
    };
    abort();
   };
   f22();
   abort();
  };
  f23();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_current_op_size(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return HEAPU32[(var$0 + 44 | 0) >> 2] | 0 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_pc(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return HEAPU32[(var$0 + 36 | 0) >> 2] | 0 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_set_pc(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 4 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 5 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 6 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 7 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$0 + 36 | 0) >> 2] = var$1;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_fp(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return HEAPU32[(var$0 + 16 | 0) >> 2] | 0 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_set_fp(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 4 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 5 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 6 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 7 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$0 + 16 | 0) >> 2] = var$1;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_sp(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return HEAPU32[(var$0 + 20 | 0) >> 2] | 0 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_set_sp(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 4 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 5 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 6 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 7 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$0 + 20 | 0) >> 2] = var$1;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_register(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$1;
     var$4 = var$0 + 4 | 0;
     (wasm2asm_i32$1 = var$4, wasm2asm_i32$2 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = f10(var$0 + 8 | 0 | 0, var$1 | 0) | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$4, wasm2asm_i32$2 = var$3), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_set_register(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     var$3 = var$0 + 4 | 0;
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     f11(var$0 + 8 | 0 | 0, var$1 | 0, var$2 | 0);
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_push_frame(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     var$1 = var$0 + 4 | 0;
     (wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     f14(var$0 + 8 | 0 | 0);
     (wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_goto(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 4 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 5 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 6 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 7 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = var$0 + 36 | 0;
     HEAP32[var$2 >> 2] = ((HEAPU32[var$2 >> 2] | 0) + var$1 | 0) - (HEAPU32[(var$0 + 44 | 0) >> 2] | 0) | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_call(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   if (var$0) block : {
    var$2 = HEAPU32[var$0 >> 2] | 0;
    if ((var$2 | 0) == (4294967295 | 0)) break label$1;
    (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
    label$3 : {
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$3;
     (wasm2asm_i32$0 = var$0 + 4 | 0, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 76 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$3;
     var$3 = var$2 + 8 | 0;
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$4 = var$0 + 36 | 0;
     HEAP32[(var$0 + 40 | 0) >> 2] = HEAPU32[var$4 >> 2] | 0;
     HEAP32[var$4 >> 2] = f25(var$2 + 12 | 0 | 0, var$1 | 0) | 0;
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 4 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 5 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 6 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 7 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f29();
    abort();
   };
   f22();
   abort();
  };
  f23();
  abort();
 }
 
 function lowlevelvm_evaluate_all(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   if (var$0) block : {
    var$2 = HEAPU32[var$0 >> 2] | 0;
    if ((var$2 | 0) == (4294967295 | 0)) break label$1;
    (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
    var$2 = var$0 + 4 | 0;
    label$3 : do {
     var$3 = f24(var$2 | 0, var$1 | 0) | 0;
     if ((var$3 | 0) == (0 | 0)) continue label$3;
     break label$3;
    } while (1);
    (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
    return var$3 | 0;
   };
   f22();
   abort();
  };
  f23();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_evaluate_one(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   if (var$0) block : {
    var$2 = HEAPU32[var$0 >> 2] | 0;
    if ((var$2 | 0) == (4294967295 | 0)) break label$1;
    (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
    var$1 = f24(var$0 + 4 | 0 | 0, var$1 | 0) | 0;
    (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
    return var$1 | 0;
   };
   f22();
   abort();
  };
  f23();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_last_exception(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = var$0 + 80 | 0;
     if (HEAPU32[var$1 >> 2] | 0) break label$1;
     (wasm2asm_i32$1 = var$1, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 88 | 0) >> 2] | 0;
     var$3 = var$0 + 84 | 0;
     var$1 = HEAPU32[var$3 >> 2] | 0;
     i64toi32_i32$1 = var$3;
     HEAP32[i64toi32_i32$1 >> 2] = 0;
     (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = 0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$3 = $_rust___wbindgen_object_clone_ref(HEAPU32[(var$0 + 92 | 0) >> 2] | 0 | 0) | 0;
     var$2 = (wasm2asm_i32$3 = (var$1 | 0) == (1 | 0), wasm2asm_i32$1 = var$2, wasm2asm_i32$2 = var$3, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
     if ((var$1 | 0) == (1 | 0)) $_rust___wbindgen_object_drop_ref(var$3 | 0);
     (wasm2asm_i32$1 = var$0 + 80 | 0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$2 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_stack_copy(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     var$3 = var$0 + 4 | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = f28(var$0 + 12 | 0 | 0, var$1 | 0, var$2 | 0) | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 ^ 1 | 0 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_stack_write_raw(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     var$3 = var$0 + 4 | 0;
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     f15(var$0 + 12 | 0 | 0, var$1 | 0, var$2 | 0);
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_stack_write(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     var$3 = var$0 + 4 | 0;
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     $19 = var$1;
     var$1 = var$2 >> 31 | 0;
     f15(var$0 + 12 | 0 | 0, $19 | 0, ((var$2 + var$1 | 0) ^ var$1 | 0) << 3 | 0 | ((var$2 >>> 29 | 0) & 4 | 0) | 0 | 0);
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_stack_read_raw(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  var$2 = global$0 - 16 | 0;
  global$0 = var$2;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$0 + 4 | 0, wasm2asm_i32$2 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     f27(var$2 + 8 | 0 | 0, var$0 + 12 | 0 | 0, var$1 | 0);
     label$4 : {
      if ((HEAPU32[(var$2 + 8 | 0) >> 2] | 0 | 0) == (1 | 0)) {
       $33 = HEAPU32[(var$2 + 12 | 0) >> 2] | 0;
       break label$4;
      }
      $33 = 0;
     };
     var$1 = $33;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$0 = var$0 + 4 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     global$0 = var$2 + 16 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_stack_read(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  var$2 = global$0 - 16 | 0;
  global$0 = var$2;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$0 + 4 | 0, wasm2asm_i32$2 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     f27(var$2 + 8 | 0 | 0, var$0 + 12 | 0 | 0, var$1 | 0);
     label$4 : {
      if ((HEAPU32[(var$2 + 8 | 0) >> 2] | 0 | 0) == (1 | 0)) {
       $34 = f12(HEAPU32[(var$2 + 12 | 0) >> 2] | 0 | 0) | 0;
       break label$4;
      }
      $34 = 0;
     };
     var$1 = $34;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$0 = var$0 + 4 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     global$0 = var$2 + 16 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_stack_reset(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     var$1 = var$0 + 4 | 0;
     (wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = var$0 + 12 | 0;
     f52(var$2 | 0);
     (wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[var$2 >> 2] = 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function f52(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
  var$1 = HEAPU32[var$0 >> 2] | 0;
  if (var$1) block : {
   f52(var$1 + 16384 | 0 | 0);
   f8(HEAPU32[var$0 >> 2] | 0 | 0);
  };
 }
 
 function lowlevelvm_component_field(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, var$7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     if (var$0) block : {
      var$5 = HEAPU32[var$0 >> 2] | 0;
      if ((var$5 | 0) == (4294967295 | 0)) break label$3;
      (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$5 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      var$6 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
      if ((var$6 | 0) == (4294967295 | 0)) break label$2;
      (wasm2asm_i32$1 = var$0 + 4 | 0, wasm2asm_i32$2 = var$6 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      var$4 = var$0 + 68 | 0;
      if ((HEAPU32[var$4 >> 2] | 0 | 0) == (0 | 0)) break label$1;
      var$3 = var$1 + 128 | 0;
      var$1 = Math_imul(var$1, 28) + 12 | 0;
      label$5 : {
       label$6 : do {
        var$3 = var$3 + 4294967168 | 0;
        if (var$3 >>> 0 < 128 >>> 0) break label$5;
        var$1 = var$1 + 4294963712 | 0;
        var$4 = HEAPU32[var$4 >> 2] | 0;
        var$7 = HEAPU32[(var$4 + 3584 | 0) >> 2] | 0;
        var$4 = (wasm2asm_i32$3 = var$7, wasm2asm_i32$1 = var$4 + 3584 | 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
        if (var$7) continue label$6;
        break label$1;
        break label$6;
       } while (1);
      };
      if (var$2 >>> 0 > 6 >>> 0) break label$1;
      var$4 = HEAPU32[var$4 >> 2] | 0;
      var$3 = var$4 + var$1 | 0;
      label$7 : {
       label$8 : {
        label$9 : {
         label$10 : {
          label$11 : {
           label$12 : {
            label$13 : {
             switch (var$2 | 0) {
             case 0:
              break label$13;
             case 1:
              break label$11;
             case 2:
              break label$10;
             case 3:
              break label$7;
             case 4:
              break label$12;
             case 5:
              break label$9;
             case 6:
              break label$8;
             default:
              break label$13;
             };
            };
            var$3 = var$3 + 4294967284 | 0;
            break label$7;
           };
           var$3 = var$3 + 4 | 0;
           break label$7;
          };
          var$3 = (var$4 + var$1 | 0) + 4294967288 | 0;
          break label$7;
         };
         var$3 = (var$4 + var$1 | 0) + 4294967292 | 0;
         break label$7;
        };
        var$3 = var$3 + 8 | 0;
        break label$7;
       };
       var$3 = var$3 + 12 | 0;
      };
      var$3 = HEAPU32[var$3 >> 2] | 0;
      (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$5), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      (wasm2asm_i32$1 = var$0 + 4 | 0, wasm2asm_i32$2 = var$6), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      return var$3 | 0;
     };
     f22();
     abort();
    };
    f23();
    abort();
   };
   f29();
   abort();
  };
  f13();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_set_capabilities(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$4 = HEAPU32[var$0 >> 2] | 0;
     if ((var$4 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$4 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$0 + 4 | 0, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     label$4 : {
      var$3 = var$0 + 68 | 0;
      if (HEAPU32[var$3 >> 2] | 0) block53 : {
       var$4 = var$1 + 128 | 0;
       var$1 = Math_imul(var$1, 28) + 20 | 0;
       label$6 : do {
        var$4 = var$4 + 4294967168 | 0;
        if (var$4 >>> 0 < 128 >>> 0) break label$4;
        var$1 = var$1 + 4294963712 | 0;
        var$3 = HEAPU32[var$3 >> 2] | 0;
        var$5 = HEAPU32[(var$3 + 3584 | 0) >> 2] | 0;
        var$3 = (wasm2asm_i32$2 = var$5, wasm2asm_i32$0 = var$3 + 3584 | 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
        if (var$5) continue label$6;
        break label$6;
       } while (1);
      };
      f13();
      abort();
     };
     HEAP32[((HEAPU32[var$3 >> 2] | 0) + var$1 | 0) >> 2] = var$2;
     (wasm2asm_i32$0 = var$0 + 4 | 0, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_set_component_field(var$0, var$1, var$2, var$3) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var$3 = var$3 | 0;
  var var$4 = 0, var$5 = 0, var$6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     if (var$0) block : {
      var$4 = HEAPU32[var$0 >> 2] | 0;
      if ((var$4 | 0) == (4294967295 | 0)) break label$3;
      (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$4 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
      if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$2;
      (wasm2asm_i32$0 = var$0 + 4 | 0, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
      var$5 = var$0 + 68 | 0;
      if ((HEAPU32[var$5 >> 2] | 0 | 0) == (0 | 0)) break label$1;
      var$4 = var$1 + 128 | 0;
      var$1 = Math_imul(var$1, 28);
      label$5 : {
       label$6 : do {
        var$4 = var$4 + 4294967168 | 0;
        if (var$4 >>> 0 < 128 >>> 0) break label$5;
        var$1 = var$1 + 4294963712 | 0;
        var$5 = HEAPU32[var$5 >> 2] | 0;
        var$6 = HEAPU32[(var$5 + 3584 | 0) >> 2] | 0;
        var$5 = (wasm2asm_i32$2 = var$6, wasm2asm_i32$0 = var$5 + 3584 | 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
        if (var$6) continue label$6;
        break label$1;
        break label$6;
       } while (1);
      };
      if (var$2 >>> 0 > 6 >>> 0) break label$1;
      var$4 = (HEAPU32[var$5 >> 2] | 0) + var$1 | 0;
      label$7 : {
       label$8 : {
        label$9 : {
         label$10 : {
          label$11 : {
           label$12 : {
            switch (var$2 | 0) {
            case 0:
             break label$7;
            case 1:
             break label$12;
            case 2:
             break label$10;
            case 3:
             break label$11;
            case 4:
             break label$8;
            case 5:
             break label$1;
            case 6:
             break label$9;
            default:
             break label$7;
            };
           };
           var$4 = var$4 + 4 | 0;
           break label$7;
          };
          var$4 = var$4 + 12 | 0;
          break label$7;
         };
         var$4 = var$4 + 8 | 0;
         break label$7;
        };
        var$4 = var$4 + 24 | 0;
        break label$7;
       };
       var$4 = var$4 + 16 | 0;
      };
      HEAP32[var$4 >> 2] = var$3;
      (wasm2asm_i32$0 = var$0 + 4 | 0, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
      (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
      return;
     };
     f22();
     abort();
    };
    f23();
    abort();
   };
   f29();
   abort();
  };
  f13();
  abort();
 }
 
 function lowlevelvm_instruction_encode(var$0, var$1, var$2, var$3) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var$3 = var$3 | 0;
  var var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$4 = HEAPU32[var$0 >> 2] | 0;
     if ((var$4 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$4 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     var$4 = var$0 + 4 | 0;
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     f26(var$0 + 24 | 0 | 0, var$1 | 0, var$2 | 0, var$3 | 0);
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function lowlevelvm_instruction_ptr(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return HEAPU32[(var$0 + 24 | 0) >> 2] | 0 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function lowlevelvm_instruction_finalize(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     if (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$0 = var$0 + 32 | 0;
     var$1 = (wasm2asm_i32$1 = var$0, HEAPU8[wasm2asm_i32$1 >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 1 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 2 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 3 | 0) >> 0] | 0 | 0) << 24);
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function f59(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var $2 = 0, $3 = 0;
  $_rust___wbindgen_throw(var$0 | 0, var$1 | 0);
  abort();
 }
 
 function f60(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, var$7 = 0, var$8 = 0, var$9 = 0, var$9$hi = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $950 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : {
           label$10 : {
            label$11 : {
             label$12 : {
              label$13 : {
               label$14 : {
                label$15 : {
                 label$16 : {
                  label$17 : {
                   label$18 : {
                    label$19 : {
                     label$20 : {
                      label$21 : {
                       label$22 : {
                        label$23 : {
                         label$24 : {
                          label$25 : {
                           label$26 : {
                            label$27 : {
                             label$28 : {
                              label$29 : {
                               label$30 : {
                                label$31 : {
                                 label$32 : {
                                  label$33 : {
                                   label$34 : {
                                    label$35 : {
                                     label$36 : {
                                      label$37 : {
                                       if (var$0 >>> 0 <= 244 >>> 0) block : {
                                        var$4 = HEAPU32[28796 >> 2] | 0;
                                        var$2 = (wasm2asm_i32$2 = var$0 >>> 0 < 11 >>> 0, wasm2asm_i32$0 = 16, wasm2asm_i32$1 = (var$0 + 11 | 0) & 4294967288 | 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
                                        var$1 = var$2 >>> 3 | 0;
                                        var$3 = var$1 & 31 | 0;
                                        var$0 = var$4 >>> var$3 | 0;
                                        if ((var$0 & 3 | 0 | 0) == (0 | 0)) break label$37;
                                        var$2 = ((var$0 ^ 4294967295 | 0) & 1 | 0) + var$1 | 0;
                                        var$3 = var$2 << 3 | 0;
                                        var$0 = HEAPU32[(var$3 + 28812 | 0) >> 2] | 0;
                                        var$5 = var$0 + 8 | 0;
                                        var$1 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
                                        var$3 = var$3 + 28804 | 0;
                                        if ((var$1 | 0) == (var$3 | 0)) break label$36;
                                        HEAP32[(var$1 + 12 | 0) >> 2] = var$3;
                                        HEAP32[(var$3 + 8 | 0) >> 2] = var$1;
                                        break label$35;
                                       };
                                       if (var$0 >>> 0 >= 4294967232 >>> 0) break label$9;
                                       var$0 = var$0 + 11 | 0;
                                       var$2 = var$0 & 4294967288 | 0;
                                       var$7 = HEAPU32[28800 >> 2] | 0;
                                       if ((var$7 | 0) == (0 | 0)) break label$28;
                                       var$1 = 0 - var$2 | 0;
                                       label$39 : {
                                        var$0 = var$0 >>> 8 | 0;
                                        $71 = 0;
                                        if ((var$0 | 0) == (0 | 0)) break label$39;
                                        var$8 = 31;
                                        $71 = var$8;
                                        if (var$2 >>> 0 > 16777215 >>> 0) break label$39;
                                        var$0 = Math_clz32(var$0);
                                        $71 = (var$2 >>> ((38 - var$0 | 0) & 31 | 0) | 0) & 1 | 0 | ((31 - var$0 | 0) << 1 | 0) | 0;
                                       };
                                       var$8 = $71;
                                       var$0 = HEAPU32[((var$8 << 2 | 0) + 29068 | 0) >> 2] | 0;
                                       if ((var$0 | 0) == (0 | 0)) break label$31;
                                       var$4 = var$2 << (wasm2asm_i32$2 = (var$8 | 0) == (31 | 0), wasm2asm_i32$0 = 0, wasm2asm_i32$1 = (25 - (var$8 >>> 1 | 0) | 0) & 31 | 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1) | 0;
                                       label$40 : do {
                                        label$41 : {
                                         var$6 = (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) & 4294967288 | 0;
                                         if (var$6 >>> 0 < var$2 >>> 0) break label$41;
                                         var$6 = var$6 - var$2 | 0;
                                         if (var$6 >>> 0 >= var$1 >>> 0) break label$41;
                                         var$1 = var$6;
                                         var$5 = var$0;
                                         if ((var$6 | 0) == (0 | 0)) break label$33;
                                        };
                                        var$6 = HEAPU32[(var$0 + 20 | 0) >> 2] | 0;
                                        var$0 = HEAPU32[((var$0 + ((var$4 >>> 29 | 0) & 4 | 0) | 0) + 16 | 0) >> 2] | 0;
                                        var$3 = (wasm2asm_i32$2 = var$6, wasm2asm_i32$0 = (wasm2asm_i32$2 = (var$6 | 0) != (var$0 | 0), wasm2asm_i32$0 = var$6, wasm2asm_i32$1 = var$3, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1), wasm2asm_i32$1 = var$3, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
                                        var$4 = var$4 << 1 | 0;
                                        if (var$0) continue label$40;
                                        break label$40;
                                       } while (1);
                                       if ((var$3 | 0) == (0 | 0)) break label$32;
                                       var$0 = var$3;
                                       break label$30;
                                      };
                                      if (var$2 >>> 0 <= (HEAPU32[29196 >> 2] | 0) >>> 0) break label$28;
                                      if ((var$0 | 0) == (0 | 0)) break label$34;
                                      $153 = var$0 << var$3 | 0;
                                      var$0 = 2 << var$3 | 0;
                                      var$0 = $153 & (var$0 | (0 - var$0 | 0) | 0) | 0;
                                      var$1 = __wasm_ctz_i32(var$0 & (0 - var$0 | 0) | 0) | 0;
                                      var$5 = var$1 << 3 | 0;
                                      var$0 = HEAPU32[(var$5 + 28812 | 0) >> 2] | 0;
                                      var$3 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
                                      var$5 = var$5 + 28804 | 0;
                                      if ((var$3 | 0) == (var$5 | 0)) break label$26;
                                      HEAP32[(var$3 + 12 | 0) >> 2] = var$5;
                                      HEAP32[(var$5 + 8 | 0) >> 2] = var$3;
                                      break label$25;
                                     };
                                     HEAP32[28796 >> 2] = var$4 & (__wasm_rotl_i32(4294967294, var$2) | 0) | 0;
                                    };
                                    var$2 = var$2 << 3 | 0;
                                    HEAP32[(var$0 + 4 | 0) >> 2] = var$2 | 3 | 0;
                                    var$0 = var$0 + var$2 | 0;
                                    HEAP32[(var$0 + 4 | 0) >> 2] = HEAPU32[(var$0 + 4 | 0) >> 2] | 0 | 1 | 0;
                                    return var$5 | 0;
                                   };
                                   var$0 = HEAPU32[28800 >> 2] | 0;
                                   if ((var$0 | 0) == (0 | 0)) break label$28;
                                   var$4 = HEAPU32[(((__wasm_ctz_i32(var$0 & (0 - var$0 | 0) | 0) | 0) << 2 | 0) + 29068 | 0) >> 2] | 0;
                                   var$1 = ((HEAPU32[(var$4 + 4 | 0) >> 2] | 0) & 4294967288 | 0) - var$2 | 0;
                                   var$3 = var$4;
                                   var$0 = HEAPU32[(var$4 + 16 | 0) >> 2] | 0;
                                   if ((var$0 | 0) == (0 | 0)) break label$13;
                                   $221 = 0;
                                   break label$12;
                                  };
                                  var$1 = 0;
                                  break label$30;
                                 };
                                 if (var$5) break label$29;
                                };
                                var$5 = 0;
                                var$0 = 2 << (var$8 & 31 | 0) | 0;
                                var$0 = (var$0 | (0 - var$0 | 0) | 0) & var$7 | 0;
                                if ((var$0 | 0) == (0 | 0)) break label$28;
                                var$0 = HEAPU32[(((__wasm_ctz_i32(var$0 & (0 - var$0 | 0) | 0) | 0) << 2 | 0) + 29068 | 0) >> 2] | 0;
                                if ((var$0 | 0) == (0 | 0)) break label$28;
                               };
                               label$42 : do {
                                var$3 = (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) & 4294967288 | 0;
                                var$6 = var$3 - var$2 | 0;
                                var$4 = var$3 >>> 0 >= var$2 >>> 0 & var$6 >>> 0 < var$1 >>> 0 | 0;
                                var$3 = HEAPU32[(var$0 + 16 | 0) >> 2] | 0;
                                if ((var$3 | 0) == (0 | 0)) var$3 = HEAPU32[(var$0 + 20 | 0) >> 2] | 0;
                                var$5 = (wasm2asm_i32$2 = var$4, wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$5, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
                                var$1 = (wasm2asm_i32$2 = var$4, wasm2asm_i32$0 = var$6, wasm2asm_i32$1 = var$1, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
                                var$0 = var$3;
                                if (var$3) continue label$42;
                                break label$42;
                               } while (1);
                               if ((var$5 | 0) == (0 | 0)) break label$28;
                              };
                              var$0 = HEAPU32[29196 >> 2] | 0;
                              if (var$0 >>> 0 < var$2 >>> 0 | var$1 >>> 0 < (var$0 - var$2 | 0) >>> 0 | 0) break label$27;
                             };
                             label$44 : {
                              label$45 : {
                               label$46 : {
                                var$1 = HEAPU32[29196 >> 2] | 0;
                                if (var$1 >>> 0 < var$2 >>> 0) block56 : {
                                 var$0 = HEAPU32[29200 >> 2] | 0;
                                 if (var$0 >>> 0 <= var$2 >>> 0) break label$46;
                                 break label$1;
                                };
                                var$0 = HEAPU32[29204 >> 2] | 0;
                                var$3 = var$1 - var$2 | 0;
                                if (var$3 >>> 0 >= 16 >>> 0) break label$45;
                                HEAP32[29204 >> 2] = 0;
                                HEAP32[29196 >> 2] = 0;
                                HEAP32[(var$0 + 4 | 0) >> 2] = var$1 | 3 | 0;
                                var$1 = var$0 + var$1 | 0;
                                var$2 = var$1 + 4 | 0;
                                var$1 = HEAPU32[(var$1 + 4 | 0) >> 2] | 0 | 1 | 0;
                                break label$44;
                               };
                               var$1 = 0;
                               var$3 = var$2 + 65583 | 0;
                               var$0 = __wasm_grow_memory(var$3 >>> 16 | 0 | 0);
                               if ((var$0 | 0) == (4294967295 | 0)) break label$9;
                               var$4 = var$0 << 16 | 0;
                               if ((var$4 | 0) == (0 | 0)) break label$9;
                               var$6 = var$3 & 4294901760 | 0;
                               var$0 = (HEAPU32[29212 >> 2] | 0) + var$6 | 0;
                               HEAP32[29212 >> 2] = var$0;
                               var$1 = HEAPU32[29216 >> 2] | 0;
                               HEAP32[29216 >> 2] = (wasm2asm_i32$2 = var$0 >>> 0 < var$1 >>> 0, wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = var$0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
                               var$1 = HEAPU32[29208 >> 2] | 0;
                               if ((var$1 | 0) == (0 | 0)) break label$20;
                               var$0 = 29220;
                               label$48 : do {
                                var$3 = HEAPU32[var$0 >> 2] | 0;
                                var$5 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
                                if ((var$3 + var$5 | 0 | 0) == (var$4 | 0)) break label$19;
                                var$0 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
                                if (var$0) continue label$48;
                                break label$11;
                                break label$48;
                               } while (1);
                              };
                              HEAP32[29196 >> 2] = var$3;
                              var$4 = var$0 + var$2 | 0;
                              HEAP32[29204 >> 2] = var$4;
                              HEAP32[(var$4 + 4 | 0) >> 2] = var$3 | 1 | 0;
                              HEAP32[(var$0 + var$1 | 0) >> 2] = var$3;
                              var$1 = var$2 | 3 | 0;
                              var$2 = var$0 + 4 | 0;
                             };
                             HEAP32[var$2 >> 2] = var$1;
                             return var$0 + 8 | 0 | 0;
                            };
                            f61(var$5 | 0);
                            if (var$1 >>> 0 > 15 >>> 0) break label$24;
                            var$0 = var$1 + var$2 | 0;
                            HEAP32[(var$5 + 4 | 0) >> 2] = var$0 | 3 | 0;
                            var$0 = var$5 + var$0 | 0;
                            HEAP32[(var$0 + 4 | 0) >> 2] = HEAPU32[(var$0 + 4 | 0) >> 2] | 0 | 1 | 0;
                            break label$14;
                           };
                           HEAP32[28796 >> 2] = var$4 & (__wasm_rotl_i32(4294967294, var$1) | 0) | 0;
                          };
                          var$3 = var$0 + 8 | 0;
                          HEAP32[(var$0 + 4 | 0) >> 2] = var$2 | 3 | 0;
                          var$4 = var$0 + var$2 | 0;
                          var$1 = var$1 << 3 | 0;
                          var$2 = var$1 - var$2 | 0;
                          HEAP32[(var$4 + 4 | 0) >> 2] = var$2 | 1 | 0;
                          HEAP32[(var$0 + var$1 | 0) >> 2] = var$2;
                          var$0 = HEAPU32[29196 >> 2] | 0;
                          if ((var$0 | 0) == (0 | 0)) break label$21;
                          var$5 = var$0 >>> 3 | 0;
                          var$1 = (var$5 << 3 | 0) + 28804 | 0;
                          var$0 = HEAPU32[29204 >> 2] | 0;
                          var$6 = HEAPU32[28796 >> 2] | 0;
                          var$5 = 1 << (var$5 & 31 | 0) | 0;
                          if ((var$6 & var$5 | 0 | 0) == (0 | 0)) break label$23;
                          $429 = HEAPU32[(var$1 + 8 | 0) >> 2] | 0;
                          break label$22;
                         };
                         HEAP32[(var$5 + 4 | 0) >> 2] = var$2 | 3 | 0;
                         var$0 = var$5 + var$2 | 0;
                         HEAP32[(var$0 + 4 | 0) >> 2] = var$1 | 1 | 0;
                         HEAP32[(var$0 + var$1 | 0) >> 2] = var$1;
                         if (var$1 >>> 0 > 255 >>> 0) break label$18;
                         var$1 = var$1 >>> 3 | 0;
                         var$2 = (var$1 << 3 | 0) + 28804 | 0;
                         var$3 = HEAPU32[28796 >> 2] | 0;
                         var$1 = 1 << (var$1 & 31 | 0) | 0;
                         if ((var$3 & var$1 | 0 | 0) == (0 | 0)) break label$16;
                         var$1 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
                         $462 = var$2 + 8 | 0;
                         break label$15;
                        };
                        HEAP32[28796 >> 2] = var$6 | var$5 | 0;
                        $429 = var$1;
                       };
                       var$5 = $429;
                       HEAP32[(var$1 + 8 | 0) >> 2] = var$0;
                       HEAP32[(var$5 + 12 | 0) >> 2] = var$0;
                       HEAP32[(var$0 + 12 | 0) >> 2] = var$1;
                       HEAP32[(var$0 + 8 | 0) >> 2] = var$5;
                      };
                      HEAP32[29204 >> 2] = var$4;
                      HEAP32[29196 >> 2] = var$2;
                      return var$3 | 0;
                     };
                     label$49 : {
                      var$0 = HEAPU32[29240 >> 2] | 0;
                      if (var$0) if (var$0 >>> 0 <= var$4 >>> 0) break label$49;;
                      HEAP32[29240 >> 2] = var$4;
                     };
                     var$0 = 0;
                     HEAP32[29224 >> 2] = var$6;
                     HEAP32[29220 >> 2] = var$4;
                     HEAP32[29244 >> 2] = 4095;
                     HEAP32[29232 >> 2] = 0;
                     label$51 : do {
                      var$1 = var$0 + 28804 | 0;
                      HEAP32[(var$0 + 28812 | 0) >> 2] = var$1;
                      HEAP32[(var$0 + 28816 | 0) >> 2] = var$1;
                      var$0 = var$0 + 8 | 0;
                      if ((var$0 | 0) != (256 | 0)) continue label$51;
                      break label$51;
                     } while (1);
                     var$0 = var$6 + 4294967256 | 0;
                     HEAP32[(var$4 + 4 | 0) >> 2] = var$0 | 1 | 0;
                     HEAP32[29208 >> 2] = var$4;
                     HEAP32[29236 >> 2] = 2097152;
                     HEAP32[29200 >> 2] = var$0;
                     HEAP32[((var$4 + var$0 | 0) + 4 | 0) >> 2] = 40;
                     break label$10;
                    };
                    if ((HEAPU32[(var$0 + 12 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$17;
                    break label$11;
                   };
                   f62(var$0 | 0, var$1 | 0);
                   break label$14;
                  };
                  if (var$4 >>> 0 <= var$1 >>> 0 | var$3 >>> 0 > var$1 >>> 0 | 0) break label$11;
                  HEAP32[(var$0 + 4 | 0) >> 2] = var$5 + var$6 | 0;
                  var$0 = HEAPU32[29208 >> 2] | 0;
                  var$1 = (var$0 + 15 | 0) & 4294967288 | 0;
                  var$3 = var$1 + 4294967288 | 0;
                  var$4 = (HEAPU32[29200 >> 2] | 0) + var$6 | 0;
                  var$1 = var$4 - (var$1 - (var$0 + 8 | 0) | 0) | 0;
                  HEAP32[(var$3 + 4 | 0) >> 2] = var$1 | 1 | 0;
                  HEAP32[29236 >> 2] = 2097152;
                  HEAP32[29208 >> 2] = var$3;
                  HEAP32[29200 >> 2] = var$1;
                  HEAP32[((var$0 + var$4 | 0) + 4 | 0) >> 2] = 40;
                  break label$10;
                 };
                 HEAP32[28796 >> 2] = var$3 | var$1 | 0;
                 var$1 = var$2;
                 $462 = var$2 + 8 | 0;
                };
                var$3 = $462;
                HEAP32[var$3 >> 2] = var$0;
                HEAP32[(var$1 + 12 | 0) >> 2] = var$0;
                HEAP32[(var$0 + 12 | 0) >> 2] = var$2;
                HEAP32[(var$0 + 8 | 0) >> 2] = var$1;
               };
               var$1 = var$5 + 8 | 0;
               break label$9;
              };
              $221 = 1;
             };
             var$7 = $221;
             label$52 : do {
              label$53 : {
               label$54 : {
                label$55 : {
                 label$56 : {
                  label$57 : {
                   label$58 : {
                    label$59 : {
                     label$60 : {
                      label$61 : {
                       label$62 : {
                        label$63 : {
                         label$64 : {
                          label$65 : {
                           label$66 : {
                            label$67 : {
                             label$68 : {
                              label$69 : {
                               label$70 : {
                                switch (var$7 | 0) {
                                case 0:
                                 break label$70;
                                case 1:
                                 break label$69;
                                case 2:
                                 break label$68;
                                case 3:
                                 break label$66;
                                case 4:
                                 break label$65;
                                case 5:
                                 break label$64;
                                case 6:
                                 break label$62;
                                case 7:
                                 break label$61;
                                case 8:
                                 break label$60;
                                case 9:
                                 break label$63;
                                case 10:
                                 break label$67;
                                default:
                                 break label$67;
                                };
                               };
                               var$4 = ((HEAPU32[(var$0 + 4 | 0) >> 2] | 0) & 4294967288 | 0) - var$2 | 0;
                               $574 = var$4;
                               var$4 = var$4 >>> 0 < var$1 >>> 0;
                               var$1 = (wasm2asm_i32$2 = var$4, wasm2asm_i32$0 = $574, wasm2asm_i32$1 = var$1, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
                               var$3 = (wasm2asm_i32$2 = var$4, wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$3, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
                               var$4 = var$0;
                               var$0 = HEAPU32[(var$4 + 16 | 0) >> 2] | 0;
                               if (var$0) break label$59;
                               var$7 = 1;
                               continue label$52;
                              };
                              var$0 = HEAPU32[(var$4 + 20 | 0) >> 2] | 0;
                              if (var$0) break label$58;
                              var$7 = 2;
                              continue label$52;
                             };
                             f61(var$3 | 0);
                             if (var$1 >>> 0 >= 16 >>> 0) break label$57;
                             var$7 = 10;
                             continue label$52;
                            };
                            var$0 = var$1 + var$2 | 0;
                            HEAP32[(var$3 + 4 | 0) >> 2] = var$0 | 3 | 0;
                            var$0 = var$3 + var$0 | 0;
                            HEAP32[(var$0 + 4 | 0) >> 2] = HEAPU32[(var$0 + 4 | 0) >> 2] | 0 | 1 | 0;
                            break label$53;
                           };
                           HEAP32[(var$3 + 4 | 0) >> 2] = var$2 | 3 | 0;
                           var$2 = var$3 + var$2 | 0;
                           HEAP32[(var$2 + 4 | 0) >> 2] = var$1 | 1 | 0;
                           HEAP32[(var$2 + var$1 | 0) >> 2] = var$1;
                           var$0 = HEAPU32[29196 >> 2] | 0;
                           if ((var$0 | 0) == (0 | 0)) break label$56;
                           var$7 = 4;
                           continue label$52;
                          };
                          var$5 = var$0 >>> 3 | 0;
                          var$4 = (var$5 << 3 | 0) + 28804 | 0;
                          var$0 = HEAPU32[29204 >> 2] | 0;
                          var$6 = HEAPU32[28796 >> 2] | 0;
                          var$5 = 1 << (var$5 & 31 | 0) | 0;
                          if ((var$6 & var$5 | 0 | 0) == (0 | 0)) break label$55;
                          var$7 = 5;
                          continue label$52;
                         };
                         var$5 = HEAPU32[(var$4 + 8 | 0) >> 2] | 0;
                         break label$54;
                        };
                        HEAP32[28796 >> 2] = var$6 | var$5 | 0;
                        var$5 = var$4;
                        var$7 = 6;
                        continue label$52;
                       };
                       HEAP32[(var$4 + 8 | 0) >> 2] = var$0;
                       HEAP32[(var$5 + 12 | 0) >> 2] = var$0;
                       HEAP32[(var$0 + 12 | 0) >> 2] = var$4;
                       HEAP32[(var$0 + 8 | 0) >> 2] = var$5;
                       var$7 = 7;
                       continue label$52;
                      };
                      HEAP32[29204 >> 2] = var$2;
                      HEAP32[29196 >> 2] = var$1;
                      var$7 = 8;
                      continue label$52;
                     };
                     return var$3 + 8 | 0 | 0;
                    };
                    var$7 = 0;
                    continue label$52;
                   };
                   var$7 = 0;
                   continue label$52;
                  };
                  var$7 = 3;
                  continue label$52;
                 };
                 var$7 = 7;
                 continue label$52;
                };
                var$7 = 9;
                continue label$52;
               };
               var$7 = 6;
               continue label$52;
              };
              var$7 = 8;
              continue label$52;
              break label$52;
             } while (1);
            };
            var$0 = HEAPU32[29240 >> 2] | 0;
            HEAP32[29240 >> 2] = (wasm2asm_i32$2 = var$0 >>> 0 < var$4 >>> 0, wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$4, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
            var$3 = var$4 + var$6 | 0;
            var$0 = 29220;
            label$71 : {
             label$72 : {
              label$73 : {
               label$74 : {
                label$75 : {
                 label$76 : do {
                  if ((HEAPU32[var$0 >> 2] | 0 | 0) == (var$3 | 0)) break label$75;
                  var$0 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
                  if (var$0) continue label$76;
                  break label$74;
                  break label$76;
                 } while (1);
                };
                if ((HEAPU32[(var$0 + 12 | 0) >> 2] | 0 | 0) == (0 | 0)) break label$73;
               };
               var$0 = 29220;
               label$77 : {
                label$78 : do {
                 var$3 = HEAPU32[var$0 >> 2] | 0;
                 if (var$3 >>> 0 <= var$1 >>> 0) {
                  var$3 = var$3 + (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) | 0;
                  if (var$3 >>> 0 > var$1 >>> 0) break label$77;
                 }
                 var$0 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
                 continue label$78;
                 break label$78;
                } while (1);
               };
               var$0 = var$6 + 4294967256 | 0;
               HEAP32[(var$4 + 4 | 0) >> 2] = var$0 | 1 | 0;
               HEAP32[((var$4 + var$0 | 0) + 4 | 0) >> 2] = 40;
               var$5 = ((var$3 + 4294967264 | 0) & 4294967288 | 0) + 4294967288 | 0;
               var$5 = (wasm2asm_i32$2 = var$5 >>> 0 < (var$1 + 16 | 0) >>> 0, wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = var$5, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
               HEAP32[(var$5 + 4 | 0) >> 2] = 27;
               HEAP32[29208 >> 2] = var$4;
               HEAP32[29236 >> 2] = 2097152;
               HEAP32[29200 >> 2] = var$0;
               i64toi32_i32$1 = 29220;
               i64toi32_i32$0 = (wasm2asm_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
               var$9 = HEAPU32[i64toi32_i32$1 >> 2] | 0;
               var$9$hi = i64toi32_i32$0;
               i64toi32_i32$1 = var$5 + 16 | 0;
               $723 = i64toi32_i32$1;
               i64toi32_i32$1 = 29228;
               i64toi32_i32$0 = (wasm2asm_i32$0 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$0 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$0 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$0 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$0 + 7 | 0) >> 0] | 0 | 0) << 24);
               HEAP32[$723 >> 2] = HEAPU32[i64toi32_i32$1 >> 2] | 0;
               (wasm2asm_i32$0 = i64toi32_i32$1, wasm2asm_i32$1 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$0 + 4 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 5 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 6 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 7 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
               i64toi32_i32$1 = var$5;
               i64toi32_i32$0 = var$9$hi;
               HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = var$9;
               (wasm2asm_i32$0 = i64toi32_i32$1, wasm2asm_i32$1 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$0 + 12 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 13 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 14 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 15 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
               HEAP32[29224 >> 2] = var$6;
               HEAP32[29220 >> 2] = var$4;
               HEAP32[29228 >> 2] = var$5 + 8 | 0;
               HEAP32[29232 >> 2] = 0;
               var$0 = var$5 + 28 | 0;
               label$80 : do {
                HEAP32[var$0 >> 2] = 7;
                var$0 = var$0 + 4 | 0;
                if (var$3 >>> 0 > var$0 >>> 0) continue label$80;
                break label$80;
               } while (1);
               if ((var$5 | 0) == (var$1 | 0)) break label$10;
               HEAP32[(var$5 + 4 | 0) >> 2] = (HEAPU32[(var$5 + 4 | 0) >> 2] | 0) & 4294967294 | 0;
               var$0 = var$5 - var$1 | 0;
               HEAP32[(var$1 + 4 | 0) >> 2] = var$0 | 1 | 0;
               HEAP32[var$5 >> 2] = var$0;
               if (var$0 >>> 0 <= 255 >>> 0) block60 : {
                var$3 = var$0 >>> 3 | 0;
                var$0 = (var$3 << 3 | 0) + 28804 | 0;
                var$4 = HEAPU32[28796 >> 2] | 0;
                var$3 = 1 << (var$3 & 31 | 0) | 0;
                if ((var$4 & var$3 | 0 | 0) == (0 | 0)) break label$72;
                $784 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
                break label$71;
               };
               f62(var$1 | 0, var$0 | 0);
               break label$10;
              };
              HEAP32[var$0 >> 2] = var$4;
              HEAP32[(var$0 + 4 | 0) >> 2] = (HEAPU32[(var$0 + 4 | 0) >> 2] | 0) + var$6 | 0;
              HEAP32[(var$4 + 4 | 0) >> 2] = var$2 | 3 | 0;
              var$0 = var$4 + var$2 | 0;
              var$2 = (var$3 - var$4 | 0) - var$2 | 0;
              if ((HEAPU32[29208 >> 2] | 0 | 0) == (var$3 | 0)) break label$8;
              if ((HEAPU32[29204 >> 2] | 0 | 0) == (var$3 | 0)) break label$7;
              var$1 = HEAPU32[(var$3 + 4 | 0) >> 2] | 0;
              if ((var$1 & 3 | 0 | 0) != (1 | 0)) break label$3;
              var$5 = var$1 & 4294967288 | 0;
              if (var$5 >>> 0 > 255 >>> 0) break label$6;
              var$6 = HEAPU32[(var$3 + 12 | 0) >> 2] | 0;
              var$8 = HEAPU32[(var$3 + 8 | 0) >> 2] | 0;
              if ((var$6 | 0) == (var$8 | 0)) break label$5;
              HEAP32[(var$8 + 12 | 0) >> 2] = var$6;
              HEAP32[(var$6 + 8 | 0) >> 2] = var$8;
              break label$4;
             };
             HEAP32[28796 >> 2] = var$4 | var$3 | 0;
             $784 = var$0;
            };
            var$3 = $784;
            HEAP32[(var$0 + 8 | 0) >> 2] = var$1;
            HEAP32[(var$3 + 12 | 0) >> 2] = var$1;
            HEAP32[(var$1 + 12 | 0) >> 2] = var$0;
            HEAP32[(var$1 + 8 | 0) >> 2] = var$3;
           };
           var$1 = 0;
           var$0 = HEAPU32[29200 >> 2] | 0;
           if (var$0 >>> 0 <= var$2 >>> 0) break label$9;
           break label$1;
          };
          return var$1 | 0;
         };
         HEAP32[29208 >> 2] = var$0;
         var$2 = (HEAPU32[29200 >> 2] | 0) + var$2 | 0;
         HEAP32[29200 >> 2] = var$2;
         HEAP32[(var$0 + 4 | 0) >> 2] = var$2 | 1 | 0;
         break label$2;
        };
        var$2 = (HEAPU32[29196 >> 2] | 0) + var$2 | 0;
        HEAP32[(var$0 + 4 | 0) >> 2] = var$2 | 1 | 0;
        HEAP32[29204 >> 2] = var$0;
        HEAP32[29196 >> 2] = var$2;
        HEAP32[(var$0 + var$2 | 0) >> 2] = var$2;
        break label$2;
       };
       f61(var$3 | 0);
       break label$4;
      };
      HEAP32[28796 >> 2] = (HEAPU32[28796 >> 2] | 0) & (__wasm_rotl_i32(4294967294, var$1 >>> 3 | 0) | 0) | 0;
     };
     var$2 = var$5 + var$2 | 0;
     var$3 = var$3 + var$5 | 0;
    };
    HEAP32[(var$3 + 4 | 0) >> 2] = (HEAPU32[(var$3 + 4 | 0) >> 2] | 0) & 4294967294 | 0;
    HEAP32[(var$0 + 4 | 0) >> 2] = var$2 | 1 | 0;
    HEAP32[(var$0 + var$2 | 0) >> 2] = var$2;
    label$82 : {
     label$83 : {
      if (var$2 >>> 0 <= 255 >>> 0) block62 : {
       var$1 = var$2 >>> 3 | 0;
       var$2 = (var$1 << 3 | 0) + 28804 | 0;
       var$3 = HEAPU32[28796 >> 2] | 0;
       var$1 = 1 << (var$1 & 31 | 0) | 0;
       if ((var$3 & var$1 | 0 | 0) == (0 | 0)) break label$83;
       var$1 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
       $912 = var$2 + 8 | 0;
       break label$82;
      };
      f62(var$0 | 0, var$2 | 0);
      break label$2;
     };
     HEAP32[28796 >> 2] = var$3 | var$1 | 0;
     var$1 = var$2;
     $912 = var$2 + 8 | 0;
    };
    var$3 = $912;
    HEAP32[var$3 >> 2] = var$0;
    HEAP32[(var$1 + 12 | 0) >> 2] = var$0;
    HEAP32[(var$0 + 12 | 0) >> 2] = var$2;
    HEAP32[(var$0 + 8 | 0) >> 2] = var$1;
   };
   return var$4 + 8 | 0 | 0;
  };
  var$1 = var$0 - var$2 | 0;
  HEAP32[29200 >> 2] = var$1;
  var$0 = HEAPU32[29208 >> 2] | 0;
  var$3 = var$0 + var$2 | 0;
  HEAP32[29208 >> 2] = var$3;
  HEAP32[(var$3 + 4 | 0) >> 2] = var$1 | 1 | 0;
  HEAP32[(var$0 + 4 | 0) >> 2] = var$2 | 3 | 0;
  return var$0 + 8 | 0 | 0;
 }
 
 function f61(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  var$3 = HEAPU32[(var$0 + 24 | 0) >> 2] | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     var$1 = HEAPU32[(var$0 + 12 | 0) >> 2] | 0;
     if ((var$1 | 0) != (var$0 | 0)) block : {
      var$2 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
      HEAP32[(var$2 + 12 | 0) >> 2] = var$1;
      HEAP32[(var$1 + 8 | 0) >> 2] = var$2;
      if (var$3) break label$3;
      break label$2;
     };
     var$2 = var$0 + 20 | 0;
     var$2 = (wasm2asm_i32$2 = HEAPU32[var$2 >> 2] | 0, wasm2asm_i32$0 = var$2, wasm2asm_i32$1 = var$0 + 16 | 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
     var$4 = HEAPU32[var$2 >> 2] | 0;
     if (var$4) block64 : {
      label$6 : do {
       var$5 = var$2;
       var$1 = var$4;
       var$2 = var$1 + 20 | 0;
       var$4 = HEAPU32[var$2 >> 2] | 0;
       if (var$4) continue label$6;
       var$2 = var$1 + 16 | 0;
       var$4 = HEAPU32[(var$1 + 16 | 0) >> 2] | 0;
       if (var$4) continue label$6;
       break label$6;
      } while (1);
      HEAP32[var$5 >> 2] = 0;
      if (var$3) break label$3;
      break label$2;
     };
     var$1 = 0;
     if ((var$3 | 0) == (0 | 0)) break label$2;
    };
    label$7 : {
     var$4 = HEAPU32[(var$0 + 28 | 0) >> 2] | 0;
     var$2 = (var$4 << 2 | 0) + 29068 | 0;
     if ((HEAPU32[var$2 >> 2] | 0 | 0) != (var$0 | 0)) block66 : {
      HEAP32[(wasm2asm_i32$2 = (HEAPU32[(var$3 + 16 | 0) >> 2] | 0 | 0) == (var$0 | 0), wasm2asm_i32$0 = var$3 + 16 | 0, wasm2asm_i32$1 = var$3 + 20 | 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1) >> 2] = var$1;
      if (var$1) break label$7;
      break label$2;
     };
     HEAP32[var$2 >> 2] = var$1;
     if ((var$1 | 0) == (0 | 0)) break label$1;
    };
    HEAP32[(var$1 + 24 | 0) >> 2] = var$3;
    var$2 = HEAPU32[(var$0 + 16 | 0) >> 2] | 0;
    if (var$2) block68 : {
     HEAP32[(var$1 + 16 | 0) >> 2] = var$2;
     HEAP32[(var$2 + 24 | 0) >> 2] = var$1;
    };
    var$2 = HEAPU32[(var$0 + 20 | 0) >> 2] | 0;
    if ((var$2 | 0) == (0 | 0)) break label$2;
    HEAP32[(var$1 + 20 | 0) >> 2] = var$2;
    HEAP32[(var$2 + 24 | 0) >> 2] = var$1;
   };
   return;
  };
  HEAP32[28800 >> 2] = (HEAPU32[28800 >> 2] | 0) & (__wasm_rotl_i32(4294967294, var$4) | 0) | 0;
 }
 
 function f62(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  $8 = var$0;
  label$1 : {
   var$3 = var$1 >>> 8 | 0;
   $13 = 0;
   if ((var$3 | 0) == (0 | 0)) break label$1;
   var$2 = 31;
   $13 = var$2;
   if (var$1 >>> 0 > 16777215 >>> 0) break label$1;
   var$2 = Math_clz32(var$3);
   $13 = (var$1 >>> ((38 - var$2 | 0) & 31 | 0) | 0) & 1 | 0 | ((31 - var$2 | 0) << 1 | 0) | 0;
  };
  var$2 = $13;
  HEAP32[($8 + 28 | 0) >> 2] = var$2;
  i64toi32_i32$1 = var$0;
  HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = 0;
  (wasm2asm_i32$0 = i64toi32_i32$1, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 20 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 21 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 22 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 23 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
  var$3 = (var$2 << 2 | 0) + 29068 | 0;
  label$2 : {
   label$3 : {
    label$4 : {
     var$4 = HEAPU32[28800 >> 2] | 0;
     var$5 = 1 << (var$2 & 31 | 0) | 0;
     if (var$4 & var$5 | 0) block : {
      var$4 = HEAPU32[var$3 >> 2] | 0;
      if (((HEAPU32[(var$4 + 4 | 0) >> 2] | 0) & 4294967288 | 0 | 0) != (var$1 | 0)) break label$4;
      var$2 = var$4;
      break label$3;
     };
     HEAP32[var$3 >> 2] = var$0;
     HEAP32[28800 >> 2] = var$4 | var$5 | 0;
     HEAP32[(var$0 + 24 | 0) >> 2] = var$3;
     HEAP32[(var$0 + 8 | 0) >> 2] = var$0;
     HEAP32[(var$0 + 12 | 0) >> 2] = var$0;
     return;
    };
    var$3 = var$1 << (wasm2asm_i32$2 = (var$2 | 0) == (31 | 0), wasm2asm_i32$0 = 0, wasm2asm_i32$1 = (25 - (var$2 >>> 1 | 0) | 0) & 31 | 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1) | 0;
    label$6 : do {
     var$5 = (var$4 + ((var$3 >>> 29 | 0) & 4 | 0) | 0) + 16 | 0;
     var$2 = HEAPU32[var$5 >> 2] | 0;
     if ((var$2 | 0) == (0 | 0)) break label$2;
     var$3 = var$3 << 1 | 0;
     var$4 = var$2;
     if (((HEAPU32[(var$2 + 4 | 0) >> 2] | 0) & 4294967288 | 0 | 0) != (var$1 | 0)) continue label$6;
     break label$6;
    } while (1);
   };
   var$3 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
   HEAP32[(var$3 + 12 | 0) >> 2] = var$0;
   HEAP32[(var$2 + 8 | 0) >> 2] = var$0;
   HEAP32[(var$0 + 12 | 0) >> 2] = var$2;
   HEAP32[(var$0 + 8 | 0) >> 2] = var$3;
   HEAP32[(var$0 + 24 | 0) >> 2] = 0;
   return;
  };
  HEAP32[var$5 >> 2] = var$0;
  HEAP32[(var$0 + 24 | 0) >> 2] = var$4;
  HEAP32[(var$0 + 12 | 0) >> 2] = var$0;
  HEAP32[(var$0 + 8 | 0) >> 2] = var$0;
 }
 
 function f63(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   var$0 = (wasm2asm_i32$2 = var$0 >>> 0 > 16 >>> 0, wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 16, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
   if ((4294967232 - var$0 | 0) >>> 0 <= var$1 >>> 0) break label$1;
   var$4 = (wasm2asm_i32$2 = var$1 >>> 0 < 11 >>> 0, wasm2asm_i32$0 = 16, wasm2asm_i32$1 = (var$1 + 11 | 0) & 4294967288 | 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
   var$1 = f60((var$0 + var$4 | 0) + 12 | 0 | 0) | 0;
   if ((var$1 | 0) == (0 | 0)) break label$1;
   var$2 = var$1 + 4294967288 | 0;
   label$2 : {
    label$3 : {
     var$3 = var$0 + 4294967295 | 0;
     if (var$3 & var$1 | 0) block : {
      var$5 = var$1 + 4294967292 | 0;
      var$6 = HEAPU32[var$5 >> 2] | 0;
      var$1 = ((var$3 + var$1 | 0) & (0 - var$0 | 0) | 0) + 4294967288 | 0;
      var$0 = (wasm2asm_i32$2 = (var$1 - var$2 | 0) >>> 0 > 16 >>> 0, wasm2asm_i32$0 = var$1, wasm2asm_i32$1 = var$1 + var$0 | 0, wasm2asm_i32$2 ? wasm2asm_i32$0 : wasm2asm_i32$1);
      var$1 = var$0 - var$2 | 0;
      var$3 = (var$6 & 4294967288 | 0) - var$1 | 0;
      if ((var$6 & 3 | 0 | 0) == (0 | 0)) break label$3;
      HEAP32[(var$0 + 4 | 0) >> 2] = var$3 | ((HEAPU32[(var$0 + 4 | 0) >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
      var$3 = var$0 + var$3 | 0;
      HEAP32[(var$3 + 4 | 0) >> 2] = HEAPU32[(var$3 + 4 | 0) >> 2] | 0 | 1 | 0;
      HEAP32[var$5 >> 2] = var$1 | ((HEAPU32[var$5 >> 2] | 0) & 1 | 0) | 0 | 2 | 0;
      HEAP32[(var$0 + 4 | 0) >> 2] = HEAPU32[(var$0 + 4 | 0) >> 2] | 0 | 1 | 0;
      f64(var$2 | 0, var$1 | 0);
      break label$2;
     };
     var$0 = var$2;
     break label$2;
    };
    var$2 = HEAPU32[var$2 >> 2] | 0;
    HEAP32[(var$0 + 4 | 0) >> 2] = var$3;
    HEAP32[var$0 >> 2] = var$2 + var$1 | 0;
   };
   label$5 : {
    var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
    if ((var$1 & 3 | 0 | 0) == (0 | 0)) break label$5;
    var$2 = var$1 & 4294967288 | 0;
    if (var$2 >>> 0 <= (var$4 + 16 | 0) >>> 0) break label$5;
    HEAP32[(var$0 + 4 | 0) >> 2] = var$4 | (var$1 & 1 | 0) | 0 | 2 | 0;
    var$1 = var$0 + var$4 | 0;
    var$4 = var$2 - var$4 | 0;
    HEAP32[(var$1 + 4 | 0) >> 2] = var$4 | 3 | 0;
    var$2 = var$0 + var$2 | 0;
    HEAP32[(var$2 + 4 | 0) >> 2] = HEAPU32[(var$2 + 4 | 0) >> 2] | 0 | 1 | 0;
    f64(var$1 | 0, var$4 | 0);
   };
   var$2 = var$0 + 8 | 0;
  };
  return var$2 | 0;
 }
 
 function f64(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
  var$2 = var$0 + var$1 | 0;
  label$1 : {
   label$2 : {
    label$3 : {
     label$4 : {
      label$5 : {
       label$6 : {
        label$7 : {
         label$8 : {
          var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
          if (var$3 & 1 | 0) break label$8;
          if ((var$3 & 3 | 0 | 0) == (0 | 0)) break label$7;
          var$3 = HEAPU32[var$0 >> 2] | 0;
          var$1 = var$3 + var$1 | 0;
          label$9 : {
           label$10 : {
            var$0 = var$0 - var$3 | 0;
            if ((HEAPU32[29204 >> 2] | 0 | 0) != (var$0 | 0)) block : {
             if (var$3 >>> 0 > 255 >>> 0) break label$10;
             var$4 = HEAPU32[(var$0 + 12 | 0) >> 2] | 0;
             var$5 = HEAPU32[(var$0 + 8 | 0) >> 2] | 0;
             if ((var$4 | 0) == (var$5 | 0)) break label$9;
             HEAP32[(var$5 + 12 | 0) >> 2] = var$4;
             HEAP32[(var$4 + 8 | 0) >> 2] = var$5;
             break label$8;
            };
            var$3 = HEAPU32[(var$2 + 4 | 0) >> 2] | 0;
            if ((var$3 & 3 | 0 | 0) != (3 | 0)) break label$8;
            HEAP32[29196 >> 2] = var$1;
            HEAP32[(var$2 + 4 | 0) >> 2] = var$3 & 4294967294 | 0;
            HEAP32[(var$0 + 4 | 0) >> 2] = var$1 | 1 | 0;
            HEAP32[var$2 >> 2] = var$1;
            return;
           };
           f61(var$0 | 0);
           break label$8;
          };
          HEAP32[28796 >> 2] = (HEAPU32[28796 >> 2] | 0) & (__wasm_rotl_i32(4294967294, var$3 >>> 3 | 0) | 0) | 0;
         };
         label$12 : {
          var$3 = HEAPU32[(var$2 + 4 | 0) >> 2] | 0;
          if ((var$3 & 2 | 0 | 0) == (0 | 0)) block70 : {
           if ((HEAPU32[29208 >> 2] | 0 | 0) == (var$2 | 0)) break label$12;
           if ((HEAPU32[29204 >> 2] | 0 | 0) == (var$2 | 0)) break label$6;
           var$4 = var$3 & 4294967288 | 0;
           var$1 = var$4 + var$1 | 0;
           if (var$4 >>> 0 > 255 >>> 0) break label$5;
           var$4 = HEAPU32[(var$2 + 12 | 0) >> 2] | 0;
           var$2 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
           if ((var$4 | 0) == (var$2 | 0)) break label$3;
           HEAP32[(var$2 + 12 | 0) >> 2] = var$4;
           HEAP32[(var$4 + 8 | 0) >> 2] = var$2;
           break label$2;
          };
          HEAP32[(var$2 + 4 | 0) >> 2] = var$3 & 4294967294 | 0;
          HEAP32[(var$0 + 4 | 0) >> 2] = var$1 | 1 | 0;
          HEAP32[(var$0 + var$1 | 0) >> 2] = var$1;
          break label$1;
         };
         HEAP32[29208 >> 2] = var$0;
         var$1 = (HEAPU32[29200 >> 2] | 0) + var$1 | 0;
         HEAP32[29200 >> 2] = var$1;
         HEAP32[(var$0 + 4 | 0) >> 2] = var$1 | 1 | 0;
         if ((var$0 | 0) == (HEAPU32[29204 >> 2] | 0 | 0)) break label$4;
        };
        return;
       };
       HEAP32[29204 >> 2] = var$0;
       var$1 = (HEAPU32[29196 >> 2] | 0) + var$1 | 0;
       HEAP32[29196 >> 2] = var$1;
       HEAP32[(var$0 + 4 | 0) >> 2] = var$1 | 1 | 0;
       HEAP32[(var$0 + var$1 | 0) >> 2] = var$1;
       return;
      };
      f61(var$2 | 0);
      break label$2;
     };
     HEAP32[29196 >> 2] = 0;
     HEAP32[29204 >> 2] = 0;
     return;
    };
    HEAP32[28796 >> 2] = (HEAPU32[28796 >> 2] | 0) & (__wasm_rotl_i32(4294967294, var$3 >>> 3 | 0) | 0) | 0;
   };
   HEAP32[(var$0 + 4 | 0) >> 2] = var$1 | 1 | 0;
   HEAP32[(var$0 + var$1 | 0) >> 2] = var$1;
   if ((var$0 | 0) != (HEAPU32[29204 >> 2] | 0 | 0)) break label$1;
   HEAP32[29196 >> 2] = var$1;
   return;
  };
  label$14 : {
   label$15 : {
    if (var$1 >>> 0 <= 255 >>> 0) block72 : {
     var$2 = var$1 >>> 3 | 0;
     var$1 = (var$2 << 3 | 0) + 28804 | 0;
     var$3 = HEAPU32[28796 >> 2] | 0;
     var$2 = 1 << (var$2 & 31 | 0) | 0;
     if ((var$3 & var$2 | 0 | 0) == (0 | 0)) break label$15;
     $158 = HEAPU32[(var$1 + 8 | 0) >> 2] | 0;
     break label$14;
    };
    f62(var$0 | 0, var$1 | 0);
    return;
   };
   HEAP32[28796 >> 2] = var$3 | var$2 | 0;
   $158 = var$1;
  };
  var$2 = $158;
  HEAP32[(var$1 + 8 | 0) >> 2] = var$0;
  HEAP32[(var$2 + 12 | 0) >> 2] = var$0;
  HEAP32[(var$0 + 12 | 0) >> 2] = var$1;
  HEAP32[(var$0 + 8 | 0) >> 2] = var$2;
 }
 
 function f65(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, var$5 = 0, var$5$hi = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, i64toi32_i32$4 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  var$4 = global$0 - 16 | 0;
  global$0 = var$4;
  label$1 : {
   label$2 : {
    label$3 : {
     if (var$1 >>> 0 <= 8 >>> 0) block : {
      var$3 = f60(var$0 | 0) | 0;
      if ((var$3 | 0) == (0 | 0)) break label$3;
      break label$2;
     };
     var$3 = f63(var$1 | 0, var$0 | 0) | 0;
     if (var$3) break label$2;
    };
    var$3 = 0;
    HEAP32[var$2 >> 2] = 0;
    i64toi32_i32$0 = var$2;
    $27 = i64toi32_i32$0;
    i64toi32_i32$0 = 0;
    i64toi32_i32$2 = var$1;
    i64toi32_i32$1 = 0;
    i64toi32_i32$3 = 32;
    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;
    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {
     i64toi32_i32$1 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
     $60 = 0;
    } else {
     i64toi32_i32$1 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$2 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$0 << i64toi32_i32$4 | 0) | 0;
     $60 = i64toi32_i32$2 << i64toi32_i32$4 | 0;
    }
    i64toi32_i32$0 = $60;
    i64toi32_i32$2 = 0;
    i64toi32_i32$3 = var$0;
    i64toi32_i32$2 = i64toi32_i32$1 | i64toi32_i32$2 | 0;
    var$5 = i64toi32_i32$0 | i64toi32_i32$3 | 0;
    i64toi32_i32$0 = var$5;
    HEAP32[($27 + 4 | 0) >> 2] = i64toi32_i32$0;
    (wasm2asm_i32$0 = i64toi32_i32$0, wasm2asm_i32$1 = i64toi32_i32$2), ((HEAP8[(wasm2asm_i32$0 + 8 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 9 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 10 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 11 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
    HEAP32[var$4 >> 2] = 0;
    i64toi32_i32$0 = var$4;
    i64toi32_i32$2 = i64toi32_i32$2;
    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = var$5;
    (wasm2asm_i32$0 = i64toi32_i32$0, wasm2asm_i32$1 = i64toi32_i32$2), ((HEAP8[(wasm2asm_i32$0 + 8 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 9 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 10 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 11 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
    break label$1;
   };
   if (((HEAPU8[(var$3 + 4294967292 | 0) >> 0] | 0) & 3 | 0 | 0) == (0 | 0)) break label$1;
   f95(var$3 | 0, 0 | 0, var$0 | 0) | 0;
  };
  global$0 = var$4 + 16 | 0;
  return var$3 | 0;
 }
 
 function num_allocated() {
  return 0 | 0;
 }
 
 function f67(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
  var$1 = HEAPU32[var$0 >> 2] | 0;
  if (var$1) block : {
   f67(var$1 + 16384 | 0 | 0);
   f8(HEAPU32[var$0 >> 2] | 0 | 0);
  };
 }
 
 function f68(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
  var$6 = global$0 - 272 | 0;
  global$0 = var$6;
  var$4 = var$1 << 2 | 0;
  label$1 : {
   label$2 : do {
    var$3 = HEAPU32[var$0 >> 2] | 0;
    if ((var$3 | 0) == (0 | 0)) block : {
     var$5 = f95(var$6 | 0, 0 | 0, 256 | 0) | 0;
     var$3 = f18(260 | 0, 4 | 0, var$5 + 256 | 0 | 0) | 0;
     if ((var$3 | 0) == (0 | 0)) break label$1;
     var$5 = f94(var$3 | 0, var$5 | 0, 256 | 0) | 0;
     HEAP32[(var$5 + 256 | 0) >> 2] = 0;
     f69(var$0 | 0);
     HEAP32[var$0 >> 2] = var$5;
    };
    if (var$1 >>> 0 >= 64 >>> 0) block74 : {
     var$4 = var$4 + 4294967040 | 0;
     var$0 = var$3 + 256 | 0;
     var$1 = var$1 + 4294967232 | 0;
     continue label$2;
    };
    break label$2;
   } while (1);
   HEAP32[(var$3 + var$4 | 0) >> 2] = var$2;
   global$0 = var$6 + 272 | 0;
   return;
  };
  abort();
 }
 
 function f69(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
  var$1 = HEAPU32[var$0 >> 2] | 0;
  if (var$1) block : {
   f69(var$1 + 256 | 0 | 0);
   f8(HEAPU32[var$0 >> 2] | 0 | 0);
  };
 }
 
 function __wbg_wasmheap_free(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   if (var$0) block : {
    if (HEAPU32[var$0 >> 2] | 0) break label$1;
    (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
    var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
    f8(var$0 | 0);
    f21(var$1 | 0);
    return;
   };
   f22();
   abort();
  };
  f23();
  abort();
 }
 
 function wasmheap_new() {
  var var$0 = 0, var$1 = 0, var$2 = 0, var$3 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  var$0 = global$0 - 48 | 0;
  global$0 = var$0;
  var$2 = var$0 + 24 | 0;
  HEAP32[var$2 >> 2] = 0;
  var$3 = var$0 + 16 | 0;
  i64toi32_i32$1 = var$3;
  i64toi32_i32$0 = 0;
  HEAP32[i64toi32_i32$1 >> 2] = 0;
  (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
  i64toi32_i32$1 = var$0;
  i64toi32_i32$0 = 0;
  HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = 0;
  (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 12 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 13 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 14 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 15 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
  label$1 : {
   var$1 = f18(36 | 0, 4 | 0, var$0 + 32 | 0 | 0) | 0;
   if ((var$1 | 0) == (0 | 0)) break label$1;
   i64toi32_i32$1 = var$1;
   i64toi32_i32$0 = 1;
   HEAP32[i64toi32_i32$1 >> 2] = 1;
   (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$1 = var$1;
   i64toi32_i32$0 = 2;
   HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = 0;
   (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 12 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 13 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 14 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 15 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$1 = var$1;
   $44 = i64toi32_i32$1;
   i64toi32_i32$1 = var$0;
   i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 12 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 13 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 14 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 15 | 0) >> 0] | 0 | 0) << 24);
   HEAP32[($44 + 16 | 0) >> 2] = HEAPU32[(i64toi32_i32$1 + 8 | 0) >> 2] | 0;
   (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 20 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 21 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 22 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 23 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
   i64toi32_i32$1 = var$1 + 24 | 0;
   $56 = i64toi32_i32$1;
   i64toi32_i32$1 = var$3;
   i64toi32_i32$0 = (wasm2asm_i32$1 = i64toi32_i32$1, HEAPU8[(wasm2asm_i32$1 + 4 | 0) >> 0] | 0 | 0 | (HEAPU8[(wasm2asm_i32$1 + 5 | 0) >> 0] | 0 | 0) << 8 | (HEAPU8[(wasm2asm_i32$1 + 6 | 0) >> 0] | 0 | 0) << 16 | (HEAPU8[(wasm2asm_i32$1 + 7 | 0) >> 0] | 0 | 0) << 24);
   HEAP32[$56 >> 2] = HEAPU32[i64toi32_i32$1 >> 2] | 0;
   (wasm2asm_i32$1 = i64toi32_i32$1, wasm2asm_i32$2 = i64toi32_i32$0), ((HEAP8[(wasm2asm_i32$1 + 4 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 5 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 6 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 7 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
   HEAP32[(var$1 + 32 | 0) >> 2] = HEAPU32[var$2 >> 2] | 0;
   var$2 = f18(8 | 0, 4 | 0, var$0 + 8 | 0 | 0) | 0;
   if ((var$2 | 0) == (0 | 0)) break label$1;
   HEAP32[(var$2 + 4 | 0) >> 2] = var$1;
   HEAP32[var$2 >> 2] = 0;
   global$0 = var$0 + 48 | 0;
   return var$2 | 0;
  };
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_push(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$1;
     var$4 = var$2 + 8 | 0;
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$5 = var$2 + 28 | 0;
     var$3 = HEAPU32[var$5 >> 2] | 0;
     if ((HEAPU32[(var$2 + 16 | 0) >> 2] | 0) >>> 0 > var$3 >>> 0) HEAP16[((HEAPU32[(var$2 + 12 | 0) >> 2] | 0) + (var$3 << 1 | 0) | 0) >> 1] = var$1;
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[var$5 >> 2] = var$3 + 1 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_get_by_addr(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$1;
     var$4 = var$2 + 8 | 0;
     (wasm2asm_i32$1 = var$4, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     if ((HEAPU32[(var$2 + 16 | 0) >> 2] | 0) >>> 0 > var$1 >>> 0) var$3 = HEAPU16[((HEAPU32[(var$2 + 12 | 0) >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] | 0;
     (wasm2asm_i32$1 = var$4, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$3 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_set_by_addr(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$3 + 8 | 0) >> 2] | 0) break label$1;
     var$4 = var$3 + 8 | 0;
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     if ((HEAPU32[(var$3 + 16 | 0) >> 2] | 0) >>> 0 > var$1 >>> 0) HEAP16[((HEAPU32[(var$3 + 12 | 0) >> 2] | 0) + (var$1 << 1 | 0) | 0) >> 1] = var$2;
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_malloc_handle(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$1 + 8 | 0) >> 2] | 0) break label$1;
     var$3 = var$1 + 8 | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$4 = var$1 + 20 | 0;
     var$2 = var$1 + 24 | 0;
     var$5 = HEAPU32[var$2 >> 2] | 0;
     f68(var$4 | 0, var$5 | 0, HEAPU32[(var$1 + 28 | 0) >> 2] | 0 | 0);
     f68(var$4 | 0, var$5 + 1 | 0 | 0, 0 | 0);
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[var$2 >> 2] = (HEAPU32[var$2 >> 2] | 0) + 2 | 0;
     var$1 = var$1 + 32 | 0;
     $42 = var$1;
     var$1 = HEAPU32[var$1 >> 2] | 0;
     HEAP32[$42 >> 2] = var$1 + 2 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_finish_malloc(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$3 + 8 | 0) >> 2] | 0) break label$1;
     var$4 = var$3 + 8 | 0;
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$5 = f25(var$3 + 12 | 0 | 0, var$1 | 0) | 0;
     f68(var$3 + 20 | 0 | 0, var$1 + 1 | 0 | 0, (HEAPU32[(var$3 + 28 | 0) >> 2] | 0) - var$5 | 0 | (var$2 << 16 | 0) | 0 | 0);
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_size(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     var$2 = HEAPU32[(var$1 + 8 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$1, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 8 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 9 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 10 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 11 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$1 + 28 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_get_addr(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     var$4 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
     if ((var$4 | 0) == (4294967295 | 0)) break label$1;
     var$3 = var$2 + 8 | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = var$4 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = f25(var$2 + 12 | 0 | 0, var$1 | 0) | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = (HEAPU32[var$3 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$2 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_get_handle(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$1;
     var$4 = var$2 + 8 | 0;
     (wasm2asm_i32$1 = var$4, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$5 = var$2 + 20 | 0;
     var$3 = var$2 + 24 | 0;
     var$6 = HEAPU32[var$3 >> 2] | 0;
     f68(var$5 | 0, var$6 | 0, var$1 | 0);
     f68(var$5 | 0, var$6 + 1 | 0 | 0, 3221225472 | 0);
     (wasm2asm_i32$1 = var$4, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     HEAP32[var$3 >> 2] = (HEAPU32[var$3 >> 2] | 0) + 2 | 0;
     var$2 = var$2 + 32 | 0;
     $41 = var$2;
     var$2 = HEAPU32[var$2 >> 2] | 0;
     HEAP32[$41 >> 2] = var$2 + 2 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$2 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_size_of(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     if ((HEAPU32[((HEAPU32[(var$0 + 4 | 0) >> 2] | 0) + 8 | 0) >> 2] | 0 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return 4294967295 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_scope_size_of(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     var$4 = HEAPU32[(var$2 + 8 | 0) >> 2] | 0;
     if ((var$4 | 0) == (4294967295 | 0)) break label$1;
     var$3 = var$2 + 8 | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = var$4 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = f25(var$2 + 12 | 0 | 0, var$1 + 1 | 0 | 0) | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = (HEAPU32[var$3 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return (var$2 >>> 16 | 0) & 16383 | 0 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_free_handle(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$1;
     var$3 = var$2 + 8 | 0;
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$1 = var$1 + 1 | 0;
     f68(var$2 + 20 | 0 | 0, var$1 | 0, (f25(var$2 + 12 | 0 | 0, var$1 | 0) | 0) & 1073741823 | 0 | 1073741824 | 0 | 0);
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_compact(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, var$6 = 0, var$7 = 0, var$8 = 0, var$9 = 0, var$10 = 0, var$11 = 0, var$12 = 0, var$13 = 0, var$14 = 0, var$15 = 0, var$16 = 0, var$17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $150 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$3 + 8 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$3 + 8 | 0, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     label$4 : {
      var$10 = (HEAPU32[(var$3 + 24 | 0) >> 2] | 0) >>> 1 | 0;
      if ((var$10 | 0) == (0 | 0)) break label$4;
      var$8 = var$3 + 12 | 0;
      var$9 = var$3 + 20 | 0;
      var$13 = var$3 + 16 | 0;
      label$5 : do {
       var$1 = var$6 << 1 | 0 | 1 | 0;
       label$6 : {
        label$7 : {
         label$8 : {
          label$9 : do {
           var$11 = var$1 + 4294967295 | 0;
           var$7 = f25(var$8 | 0, var$11 | 0) | 0;
           var$5 = f25(var$8 | 0, var$1 | 0) | 0;
           var$4 = var$5 >>> 30 | 0;
           if ((var$4 | 0) == (0 | 0)) break label$8;
           if ((var$4 | 0) == (1 | 0)) break label$7;
           if ((var$4 | 0) != (3 | 0)) block79 : {
            var$1 = var$1 + 2 | 0;
            var$6 = var$6 + 1 | 0;
            if (var$6 >>> 0 < var$10 >>> 0) continue label$9;
            break label$4;
           };
           break label$9;
          } while (1);
          f68(var$9 | 0, var$11 | 0, var$7 - var$2 | 0 | 0);
          break label$6;
         };
         var$14 = (var$5 & 65535 | 0) + var$1 | 0;
         if (var$7 >>> 0 < var$14 >>> 0) block81 : {
          var$15 = 0 - var$2 | 0;
          var$4 = var$7 << 1 | 0;
          var$16 = 0 - (var$2 << 1 | 0) | 0;
          var$1 = var$7;
          label$12 : do {
           var$12 = 0;
           var$17 = HEAPU32[var$13 >> 2] | 0;
           if (var$17 >>> 0 > var$1 >>> 0) var$12 = HEAPU16[((HEAPU32[var$8 >> 2] | 0) + var$4 | 0) >> 1] | 0;
           var$5 = var$1 + 1 | 0;
           if (var$17 >>> 0 > (var$15 + var$1 | 0) >>> 0) HEAP16[(((HEAPU32[var$8 >> 2] | 0) + var$16 | 0) + var$4 | 0) >> 1] = var$12;
           var$4 = var$4 + 2 | 0;
           var$1 = var$5;
           if ((var$14 | 0) != (var$5 | 0)) continue label$12;
           break label$12;
          } while (1);
         };
         f68(var$9 | 0, var$11 | 0, var$7 - var$2 | 0 | 0);
         break label$6;
        };
        f68(var$9 | 0, var$1 | 0, var$5 & 1073741823 | 0 | 2147483648 | 0 | 0);
        var$2 = (var$5 & 65535 | 0) + var$2 | 0;
       };
       var$6 = var$6 + 1 | 0;
       if (var$6 >>> 0 < var$10 >>> 0) continue label$5;
       break label$5;
      } while (1);
     };
     (wasm2asm_i32$0 = var$3, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 8 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 9 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 10 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 11 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$1 = var$3 + 28 | 0;
     HEAP32[var$1 >> 2] = (HEAPU32[var$1 >> 2] | 0) - var$2 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_push_placeholder(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$1 + 8 | 0) >> 2] | 0) break label$1;
     var$3 = var$1 + 8 | 0;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$2 = var$1 + 28 | 0;
     $21 = var$2;
     var$2 = HEAPU32[var$2 >> 2] | 0;
     HEAP32[$21 >> 2] = var$2 + 1 | 0;
     if ((HEAPU32[(var$1 + 16 | 0) >> 2] | 0) >>> 0 > var$2 >>> 0) HEAP16[((HEAPU32[(var$1 + 12 | 0) >> 2] | 0) + (var$2 << 1 | 0) | 0) >> 1] = 65535;
     (wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$2 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_table_len(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     var$2 = HEAPU32[(var$1 + 8 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$1, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 8 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 9 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 10 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 11 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$1 + 24 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_set_table_len(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$2, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 8 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 9 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 10 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 11 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$2 + 24 | 0) >> 2] = var$1;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_table_write_raw(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, var$4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$3 = HEAPU32[var$0 >> 2] | 0;
     if ((var$3 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$3 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$3 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$3 + 8 | 0) >> 2] | 0) break label$1;
     var$4 = var$3 + 8 | 0;
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 4294967295), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     f68(var$3 + 20 | 0 | 0, var$1 | 0, var$2 | 0);
     (wasm2asm_i32$0 = var$4, wasm2asm_i32$1 = 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_handle(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     var$2 = HEAPU32[(var$1 + 8 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$1, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 8 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 9 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 10 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 11 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$1 + 32 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_heap(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$1 = HEAPU32[var$0 >> 2] | 0;
     if ((var$1 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$1 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     var$2 = HEAPU32[(var$1 + 8 | 0) >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$1;
     (wasm2asm_i32$1 = var$1, wasm2asm_i32$2 = var$2), ((HEAP8[(wasm2asm_i32$1 + 8 | 0) >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 9 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 10 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 11 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     var$1 = HEAPU32[(var$1 + 12 | 0) >> 2] | 0;
     (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
     return var$1 | 0;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function wasmheap_set_handle(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$2, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 8 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 9 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 10 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 11 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$2 + 32 | 0) >> 2] = var$1;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_set_offset(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0;
  label$1 : {
   label$2 : {
    if (var$0) block : {
     var$2 = HEAPU32[var$0 >> 2] | 0;
     if ((var$2 | 0) == (4294967295 | 0)) break label$2;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
     if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$1;
     (wasm2asm_i32$0 = var$2, wasm2asm_i32$1 = 0), ((HEAP8[(wasm2asm_i32$0 + 8 | 0) >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 9 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 10 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 11 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     HEAP32[(var$2 + 28 | 0) >> 2] = var$1;
     (wasm2asm_i32$0 = var$0, wasm2asm_i32$1 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$0 >> 0] = wasm2asm_i32$1 & 255 | 0, HEAP8[(wasm2asm_i32$0 + 1 | 0) >> 0] = (wasm2asm_i32$1 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 2 | 0) >> 0] = (wasm2asm_i32$1 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$0 + 3 | 0) >> 0] = (wasm2asm_i32$1 >>> 24 | 0) & 255 | 0;
     return;
    };
    f22();
    abort();
   };
   f23();
   abort();
  };
  f29();
  abort();
 }
 
 function wasmheap_reserve(var$0, var$1) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var var$2 = 0, var$3 = 0, var$4 = 0, var$5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, wasm2asm_i32$0 = 0, wasm2asm_i32$1 = 0, wasm2asm_i32$2 = 0, wasm2asm_i32$3 = 0;
  var$4 = global$0 - 16 | 0;
  global$0 = var$4;
  label$1 : {
   label$2 : {
    label$3 : {
     if (var$0) block : {
      var$2 = HEAPU32[var$0 >> 2] | 0;
      if ((var$2 | 0) == (4294967295 | 0)) break label$3;
      (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = var$2 + 1 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      var$2 = HEAPU32[(var$0 + 4 | 0) >> 2] | 0;
      if (HEAPU32[(var$2 + 8 | 0) >> 2] | 0) break label$2;
      (wasm2asm_i32$1 = var$2 + 8 | 0, wasm2asm_i32$2 = 4294967295), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      var$3 = 2;
      var$1 = (wasm2asm_i32$3 = var$1 >>> 0 < 268435455 >>> 0, wasm2asm_i32$1 = var$1, wasm2asm_i32$2 = 268435455, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
      if (var$1) {
       var$3 = f65(var$1 << 1 | 0 | 0, 2 | 0, var$4 | 0) | 0;
       if ((var$3 | 0) == (0 | 0)) break label$1;
      }
      var$3 = (wasm2asm_i32$3 = var$1, wasm2asm_i32$1 = var$3, wasm2asm_i32$2 = 2, wasm2asm_i32$3 ? wasm2asm_i32$1 : wasm2asm_i32$2);
      var$5 = var$2 + 16 | 0;
      if ((HEAPU32[var$5 >> 2] | 0) & 2147483647 | 0) f8(HEAPU32[(var$2 + 12 | 0) >> 2] | 0 | 0);
      (wasm2asm_i32$1 = var$2 + 8 | 0, wasm2asm_i32$2 = 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      HEAP32[var$5 >> 2] = var$1;
      HEAP32[(var$2 + 12 | 0) >> 2] = var$3;
      (wasm2asm_i32$1 = var$0, wasm2asm_i32$2 = (HEAPU32[var$0 >> 2] | 0) + 4294967295 | 0), ((HEAP8[wasm2asm_i32$1 >> 0] = wasm2asm_i32$2 & 255 | 0, HEAP8[(wasm2asm_i32$1 + 1 | 0) >> 0] = (wasm2asm_i32$2 >>> 8 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 2 | 0) >> 0] = (wasm2asm_i32$2 >>> 16 | 0) & 255 | 0), HEAP8[(wasm2asm_i32$1 + 3 | 0) >> 0] = (wasm2asm_i32$2 >>> 24 | 0) & 255 | 0;
      global$0 = var$4 + 16 | 0;
      return var$3 | 0;
     };
     f22();
     abort();
    };
    f23();
    abort();
   };
   f29();
   abort();
  };
  wasm2asm_i32$0 = abort();
  return wasm2asm_i32$0 | 0;
 }
 
 function f93(var$0) {
  var$0 = var$0 | 0;
  var var$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
  var$1 = HEAPU32[var$0 >> 2] | 0;
  if (var$1) block : {
   f93(var$1 + 256 | 0 | 0);
   f8(HEAPU32[var$0 >> 2] | 0 | 0);
  };
 }
 
 function f94(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
  if (var$2) block : {
   var$3 = var$0;
   label$2 : do {
    HEAP8[var$3 >> 0] = HEAPU8[var$1 >> 0] | 0;
    var$3 = var$3 + 1 | 0;
    var$1 = var$1 + 1 | 0;
    var$2 = var$2 + 4294967295 | 0;
    if (var$2) continue label$2;
    break label$2;
   } while (1);
  };
  return var$0 | 0;
 }
 
 function f95(var$0, var$1, var$2) {
  var$0 = var$0 | 0;
  var$1 = var$1 | 0;
  var$2 = var$2 | 0;
  var var$3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
  if (var$2) block : {
   var$3 = var$0;
   label$2 : do {
    HEAP8[var$3 >> 0] = var$1;
    var$3 = var$3 + 1 | 0;
    var$2 = var$2 + 4294967295 | 0;
    if (var$2) continue label$2;
    break label$2;
   } while (1);
  };
  return var$0 | 0;
 }
 
 function __wasm_ctz_i32(x) {
  x = x | 0;
  var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0;
  if ((x | 0) == (0 | 0)) $9 = 32; else $9 = 31 - Math_clz32(x ^ (x - 1 | 0) | 0) | 0;
  return $9 | 0;
 }
 
 function __wasm_popcnt_i32(x) {
  x = x | 0;
  var count = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
  count = 0;
  b : {
   l : do {
    $5 = count;
    if ((x | 0) == (0 | 0)) break b;
    x = x & (x - 1 | 0) | 0;
    count = count + 1 | 0;
    continue l;
    break l;
   } while (1);
  };
  return $5 | 0;
 }
 
 function __wasm_rotl_i32(x, k) {
  x = x | 0;
  k = k | 0;
  var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
  return ((4294967295 >>> (k & 31 | 0) | 0) & x | 0) << (k & 31 | 0) | 0 | (((4294967295 << (32 - (k & 31 | 0) | 0) | 0) & x | 0) >>> (32 - (k & 31 | 0) | 0) | 0) | 0 | 0;
 }
 
 function __wasm_rotr_i32(x, k) {
  x = x | 0;
  k = k | 0;
  var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
  return ((4294967295 << (k & 31 | 0) | 0) & x | 0) >>> (k & 31 | 0) | 0 | (((4294967295 >>> (32 - (k & 31 | 0) | 0) | 0) & x | 0) << (32 - (k & 31 | 0) | 0) | 0) | 0 | 0;
 }
 
 function __wasm_grow_memory(pagesToAdd) {
  pagesToAdd = pagesToAdd | 0;
  var oldPages = __wasm_current_memory() | 0;
  var newPages = oldPages + pagesToAdd | 0;
  if ((oldPages < newPages) && (newPages < 65535)) {
   var newBuffer = new ArrayBuffer(Math_imul(newPages, 65536));
   var newHEAP8 = new global.Int8Array(newBuffer);
   newHEAP8.set(HEAP8);
   HEAP8 = newHEAP8;
   HEAP16 = new global.Int16Array(newBuffer);
   HEAP32 = new global.Int32Array(newBuffer);
   HEAPU8 = new global.Uint8Array(newBuffer);
   HEAPU16 = new global.Uint16Array(newBuffer);
   HEAPU32 = new global.Uint32Array(newBuffer);
   HEAPF32 = new global.Float32Array(newBuffer);
   HEAPF64 = new global.Float64Array(newBuffer);
   buffer = newBuffer;
  }
  return oldPages;
 }
 
 function __wasm_current_memory() {
  return buffer.byteLength / 65536 | 0;
 }
 
 return {
  memory: Object.create(Object.prototype, {
   grow: {
    value: __wasm_grow_memory
   }, 
   buffer: {
    get: function () {
     return buffer;
    }
    
   }
  }), 
  __wbg_lowlevelvm_free: __wbg_lowlevelvm_free, 
  lowlevelvm_new: lowlevelvm_new, 
  lowlevelvm_current_op_size: lowlevelvm_current_op_size, 
  lowlevelvm_pc: lowlevelvm_pc, 
  lowlevelvm_set_pc: lowlevelvm_set_pc, 
  lowlevelvm_fp: lowlevelvm_fp, 
  lowlevelvm_set_fp: lowlevelvm_set_fp, 
  lowlevelvm_sp: lowlevelvm_sp, 
  lowlevelvm_set_sp: lowlevelvm_set_sp, 
  lowlevelvm_register: lowlevelvm_register, 
  lowlevelvm_set_register: lowlevelvm_set_register, 
  lowlevelvm_push_frame: lowlevelvm_push_frame, 
  lowlevelvm_goto: lowlevelvm_goto, 
  lowlevelvm_call: lowlevelvm_call, 
  lowlevelvm_evaluate_all: lowlevelvm_evaluate_all, 
  lowlevelvm_evaluate_one: lowlevelvm_evaluate_one, 
  lowlevelvm_last_exception: lowlevelvm_last_exception, 
  lowlevelvm_stack_copy: lowlevelvm_stack_copy, 
  lowlevelvm_stack_write_raw: lowlevelvm_stack_write_raw, 
  lowlevelvm_stack_write: lowlevelvm_stack_write, 
  lowlevelvm_stack_read_raw: lowlevelvm_stack_read_raw, 
  lowlevelvm_stack_read: lowlevelvm_stack_read, 
  lowlevelvm_stack_reset: lowlevelvm_stack_reset, 
  lowlevelvm_component_field: lowlevelvm_component_field, 
  lowlevelvm_set_capabilities: lowlevelvm_set_capabilities, 
  lowlevelvm_set_component_field: lowlevelvm_set_component_field, 
  lowlevelvm_instruction_encode: lowlevelvm_instruction_encode, 
  lowlevelvm_instruction_ptr: lowlevelvm_instruction_ptr, 
  lowlevelvm_instruction_finalize: lowlevelvm_instruction_finalize, 
  num_allocated: num_allocated, 
  __wbg_wasmheap_free: __wbg_wasmheap_free, 
  wasmheap_new: wasmheap_new, 
  wasmheap_push: wasmheap_push, 
  wasmheap_get_by_addr: wasmheap_get_by_addr, 
  wasmheap_set_by_addr: wasmheap_set_by_addr, 
  wasmheap_malloc_handle: wasmheap_malloc_handle, 
  wasmheap_finish_malloc: wasmheap_finish_malloc, 
  wasmheap_size: wasmheap_size, 
  wasmheap_get_addr: wasmheap_get_addr, 
  wasmheap_get_handle: wasmheap_get_handle, 
  wasmheap_size_of: wasmheap_size_of, 
  wasmheap_scope_size_of: wasmheap_scope_size_of, 
  wasmheap_free_handle: wasmheap_free_handle, 
  wasmheap_compact: wasmheap_compact, 
  wasmheap_push_placeholder: wasmheap_push_placeholder, 
  wasmheap_table_len: wasmheap_table_len, 
  wasmheap_set_table_len: wasmheap_set_table_len, 
  wasmheap_table_read_raw: wasmheap_get_addr, 
  wasmheap_table_write_raw: wasmheap_table_write_raw, 
  wasmheap_handle: wasmheap_handle, 
  wasmheap_heap: wasmheap_heap, 
  wasmheap_set_handle: wasmheap_set_handle, 
  wasmheap_set_offset: wasmheap_set_offset, 
  wasmheap_reserve: wasmheap_reserve
 };
}

